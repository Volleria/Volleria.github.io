<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-27T11:20:56.079Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络爬虫</title>
    <link href="http://example.com/2022/07/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2022/07/27/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%AE%9E%E9%AA%8C/</id>
    <published>2022-07-27T09:47:18.113Z</published>
    <updated>2022-07-27T11:20:56.079Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、基本信息"><a href="#一、基本信息" class="headerlink" title="一、基本信息"></a>一、基本信息</h3><p>（略）</p><h3 id="二、实验目的"><a href="#二、实验目的" class="headerlink" title="二、实验目的"></a>二、实验目的</h3><p>要求学生掌握Socket编程技术及令牌总线协议工作过程</p><p>$$<br>&#x2F;<br>$$</p><span id="more"></span><h3 id="三、基础实验内容"><a href="#三、基础实验内容" class="headerlink" title="三、基础实验内容"></a>三、基础实验内容</h3><h4 id="Ⅰ、traceroute"><a href="#Ⅰ、traceroute" class="headerlink" title="Ⅰ、traceroute"></a>Ⅰ、traceroute</h4><p><strong>1、实验目的：</strong>熟悉traceroute的使用</p><p><strong>2、实验内容：</strong> 用traceroute测量到163网站（<a href="http://www.163.com)和到微软公司(www.microsoft.com)网站的路径.分析测量结果./">www.163.com）和到微软公司（www.microsoft.com）网站的路径。分析测量结果。</a></p><p><strong>3、实验流程及结果</strong></p><p>在Ubuntu上下载安装traceroute</p><p><img src="https://s2.loli.net/2022/07/26/lIFAdX1gBsMZjVw.png"></p><p>用traceroute测量到163网站（<a href="http://www.163.com)的路径/">www.163.com）的路径</a></p><p><img src="https://s2.loli.net/2022/07/26/Swt5TgJpsduilEn.png" alt="ICMP 163"></p><p>用traceroute测量到微软网站（<a href="http://www.microsoft.com)的路径/">www.microsoft.com）的路径</a></p><p><img src="https://s2.loli.net/2022/07/26/8MCBeayGq62RVzj.png" alt="ICMP microsoft"></p><p>上述输出信息显示了跟踪到的路由地址信息。记录从序号 1 开始，每个记录就是一跳，而每一跳表示经过的一个网关。记录给出了每个网关对应的IP地址。其中，为 *** 的记录表示可能被防火墙拦截的 ICMP 的返回信息。</p><p>在linux上使用traceroute，默认使用udp协议，除了第一跳，剩下的都是* * *。是因为虚拟机 nat 路由器，默认丢弃port&gt;32767的包。在命令中加入 -l 强制使用ICMP得到上图结果。</p><h4 id="Ⅱ、wireshark"><a href="#Ⅱ、wireshark" class="headerlink" title="Ⅱ、wireshark"></a>Ⅱ、wireshark</h4><p><strong>1、实验目的：</strong>熟悉wireshark的使用</p><p><strong>2、实验内容：</strong>下载安装wireshark软件，设置捕获条件，用wireshark捕获数据包，对以太网帧和IP数据包进行分析。</p><p><strong>3、实验流程及结果</strong></p><p>Wireshark 是一个免费开源的网络数据包分析软件。它的功能是截取网络数据包，并尽可能显示出最为详细的网络数据包数据。</p><p>下载安装Wireshark并启动</p><p><img src="https://s2.loli.net/2022/07/26/gVl5RE8uwCtqTfM.png"></p><p>查询网卡</p><p><img src="https://s2.loli.net/2022/07/26/1wGeMWDXuI27TSl.png"></p><p>打开火绒浏览器开始发包测试</p><p><img src="https://s2.loli.net/2022/07/26/YKhqtJekOu3IUV7.png"></p><p>TCP找目的地址，捕获数据包，对以太网帧和IP数据包进行分析。</p><p><img src="https://s2.loli.net/2022/07/26/HgNysLPCYbJ7Awa.png"></p><p>将 <em>TCP 80 端口</em> 作为过滤条件进行筛选分析</p><p><img src="https://s2.loli.net/2022/07/26/tdFr4m3YbPiUoAL.png"></p><h3 id="四、工程性实验内容"><a href="#四、工程性实验内容" class="headerlink" title="四、工程性实验内容"></a>四、工程性实验内容</h3><h4 id="Ⅰ、Robots协议"><a href="#Ⅰ、Robots协议" class="headerlink" title="Ⅰ、Robots协议"></a>Ⅰ、Robots协议</h4><p><strong>具体内容：</strong>查看淘宝网的Robots协议，了解抓取网站数据需要遵循的规则</p><p>Robots协议的全称是“网络爬虫排除标准”(Robots Exclusion Protocol)，网站通过Robots协议告诉搜索引擎哪些页面可以爬取，哪些页面不可以爬取。这个协议是互联网中的道德规范，虽没写入法律，但应遵守。在网站末尾加<code>/robots.txt</code>可以进行查看。</p><p><img src="https://s2.loli.net/2022/07/26/D8pZfVWqHM67LNu.png" alt="image-20220427171824767"></p><p>Robots协议的语法：#注释，*代表所有，&#x2F;代表根目录。</p><p>无robots协议的网站，信息可以爬取。</p><p>自动或人工识别robots.txt，再进行内容爬取，Robots协议是建议但非约束性，网络爬虫可以不遵守，但存在法律风险。访问量很小的可以遵循，访问量大的建议遵循。非商业的建议遵循，涉及商业利益的必须遵循，爬取全网信息必须要遵循。如果是类似人类行为的爬取信息，可不遵循。</p><h4 id="Ⅱ、-搜索关键词查询确定其关键词的查询接口"><a href="#Ⅱ、-搜索关键词查询确定其关键词的查询接口" class="headerlink" title="Ⅱ、 搜索关键词查询确定其关键词的查询接口"></a>Ⅱ、 搜索关键词查询确定其关键词的查询接口</h4><p>以豆瓣图书为例，进入豆瓣读书网站</p><img src="https://s2.loli.net/2022/07/26/78cWoRNs1kzgBpZ.png" style="zoom:67%;" /><p>随便点击一本书，观察其网址</p><img src="https://s2.loli.net/2022/07/26/iALYlmPfGcBs1I2.png" style="zoom:67%;" /><p>观察到红框部分即为该书在豆瓣数据库中的代号</p><p>进入短评部分</p><img src="https://s2.loli.net/2022/07/26/QMTEzFGlNgv2xLY.png" style="zoom:67%;" /><p>观察到前一个红框部分为该书的代码，后一个红框部分为这一页短评的起始标号，豆瓣书籍网页版一页共有20条短评，所以 start &#x3D; num （num从0开始并且为20的整倍数）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&quot;https://book.douban.com/subject/&#123;&#125;/comments/?start=&#123;&#125;&amp;limit=20&amp;status=P&amp;sort=new_score&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># booknum和index分别为书籍代码和start起始下标</span></span><br><span class="line">u = url.<span class="built_in">format</span>(<span class="built_in">str</span>(booknum),<span class="built_in">str</span>(index))</span><br></pre></td></tr></table></figure><p>所以之后对豆瓣图书评论的查询靠替换关键字完成</p><h4 id="Ⅲ、爬取豆瓣图书评论"><a href="#Ⅲ、爬取豆瓣图书评论" class="headerlink" title="Ⅲ、爬取豆瓣图书评论"></a>Ⅲ、爬取豆瓣图书评论</h4><h5 id="具体内容"><a href="#具体内容" class="headerlink" title="具体内容"></a>具体内容</h5><p>抓取豆瓣读书中对某本书的前50条短评内容并计算星级评定分数的平均值（保留两位小数）</p><h5 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h5><p>TCP协议：传输控制协议（Transmission Control Protocol，缩写为TCP）是一种面向连接的、可靠的、基于字节流的传输层通信协议，它能提供高可靠性通信(即数据无误、数据无丢失、数据无失序、数据无重复到达的通信)。</p><p>主要适用的场景：</p><p>适合于对传输质量要求较高，以及传输大量数据的通信。</p><p>在需要可靠数据传输的场合，通常使用TCP协议。</p><p>HTTP&#x2F;HTTPS等即网络服务都采用TCP协议。</p><p>TCP通信需要经过创建连接、数据传送、终止连接三个步骤。</p><ul><li><p>初始化 url ，并通过 get() 函数逐网页爬取网页源代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&quot;https://book.douban.com/subject/&#123;&#125;/comments/?start=&#123;&#125;&amp;limit=20&amp;status=P&amp;sort=new_score&quot;</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">60</span>, <span class="number">20</span>):</span><br><span class="line">    <span class="comment"># booknum 为豆瓣书籍编号，本实验选用的是35593780</span></span><br><span class="line">    u = url.<span class="built_in">format</span>(<span class="built_in">str</span>(booknum),<span class="built_in">str</span>(index))</span><br><span class="line">    r = get(u)</span><br></pre></td></tr></table></figure></li><li><p>创建 socket 实例，处理 https 的库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">url</span>):</span><br><span class="line">    host = <span class="string">&#x27;book.douban.com&#x27;</span></span><br><span class="line">    path = url[<span class="number">23</span>:]</span><br><span class="line">s = ssl.wrap_socket(socket.socket())</span><br></pre></td></tr></table></figure></li><li><p>初始化端口，与主机建立起连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">port = <span class="number">443</span>  <span class="comment"># 端口 https 默认端口443</span></span><br><span class="line">s.connect((host, port))  <span class="comment"># 建立起连接，连接主机</span></span><br></pre></td></tr></table></figure></li><li><p>设置报文格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 报文格式： GET+空格+com后面的部分+空格+HTTP/1.1(或1.0)+\r\n+Host:+域名+\r\n\r\n</span></span><br><span class="line">request = <span class="string">&#x27;GET &#123;&#125; HTTP/1.1\r\nHost: &#123;&#125;\r\n\r\n&#x27;</span>.<span class="built_in">format</span>(path, host)  <span class="comment"># 构建请求</span></span><br></pre></td></tr></table></figure></li><li><p>发送请求并接受数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s.send(request.encode(<span class="string">&#x27;utf-8&#x27;</span>))  <span class="comment"># 发送请求  转码，将str 转成bytes类型</span></span><br><span class="line">response = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># 接受数据</span></span><br><span class="line">    r = s.recv(<span class="number">1024</span>)</span><br><span class="line">    response += r</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(r) &lt; <span class="number">1024</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">response = response.decode(<span class="string">&#x27;utf-8&#x27;</span>) <span class="comment"># 解码</span></span><br></pre></td></tr></table></figure></li><li><p>对数据进行查找分析</p><p>此处主要使用 str 类型所带的 find() 函数</p><p>Python find() 方法检测<strong>字符串</strong>中是否包含<strong>子字符串</strong> str</p><p>如果指定 beg（开始） 和 end（结束） 范围，则检查是否包含在指定范围内，如果包含子字符串返回开始的索引值，否则返回-1。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># html 为字符串</span></span><br><span class="line"><span class="comment"># userstart 为每个用户所在源代码的开始位置</span></span><br><span class="line"><span class="comment"># userend 每个用户所在源代码的结束位置</span></span><br><span class="line"><span class="comment"># start_str为所查询字符串的前部分</span></span><br><span class="line"><span class="comment"># end_str为所查询字符串的后部分</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getdata</span>(<span class="params">html, userstart, userend, start_str, end_str</span>):</span><br><span class="line">    start = html.find(start_str, userstart, userend)</span><br><span class="line">    end = html.find(end_str, start)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> start == -<span class="number">1</span> <span class="keyword">else</span> html[start + <span class="built_in">len</span>(start_str):end]</span><br></pre></td></tr></table></figure><p>对于星级的平均分计算，考虑到有些用户没有打分，计算平均分时需将其删除。对于上面的数据查询函数 getdata() ，如果未能查询到该用户所打的分数，则在star[] 数组中写入0，若查询到所打的分数，则写入该分数。</p></li><li><p>将结果进行整理输出</p></li></ul>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># douban.txt 文件和当前py文件位于同一目录之下</span></span><br><span class="line">output = <span class="built_in">open</span>(<span class="string">&quot;douban.txt&quot;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;UTF—8&#x27;</span>)</span><br></pre></td></tr></table></figure><p>将50条评论逐行输入至 douban.txt 文件中，在第51行输入平均分数，第52行输入书名。</p><h5 id="可视化界面"><a href="#可视化界面" class="headerlink" title="可视化界面"></a>可视化界面</h5><p>该可视化界面采用 Unity3D 制作，版本为 2021.2.7f1c1，所用语言为 C#</p><p><strong>【展示】</strong></p><p><img src="https://s2.loli.net/2022/07/26/4tcVLn1Huael2k5.png" alt="image-20220427223747102"></p><p>[1] 处按钮为显示前页评论</p><p>[2] 处按钮为显示后页评论</p><p>[3] 处为书名显示区域</p><p>[4] 处为所求得的平均分数（保留两位小数）</p><p>[5] [6] [7] [8] 处为评论内容显示区域，可上下拖拽查看全部内容</p><p>【<strong>代码及主要制作思路</strong>】</p><p>创建一个string类型的数组，用以存储评论、书名、分数等数据</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span>[] txt</span><br></pre></td></tr></table></figure><p>使用<strong>绝对路径</strong>读取上述 douban.txt 文件</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line">txt = File.ReadAllLines(<span class="string">&quot;C:\\Users\\EKKO\\Desktop\\ComputerNetwork\\CNLab\\douban.txt&quot;</span>);</span><br></pre></td></tr></table></figure><p>此时 txt 数组共有52个元素，存储50条评论、一个书名、一个平均分数</p><p>新建 TEXT 类型数组 comments 并与UI上的组件进行绑定，将书名和分数直接显示。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">comments[<span class="number">0</span>] = transform.GetChild(<span class="number">7</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">comments[<span class="number">0</span>].text = <span class="string">&quot;平均分数:&quot;</span>+txt[<span class="number">50</span>];</span><br><span class="line">comments[<span class="number">1</span>] = transform.GetChild(<span class="number">1</span>).GetChild(<span class="number">0</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">comments[<span class="number">2</span>] = transform.GetChild(<span class="number">2</span>).GetChild(<span class="number">0</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">comments[<span class="number">3</span>] = transform.GetChild(<span class="number">3</span>).GetChild(<span class="number">0</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">comments[<span class="number">4</span>] = transform.GetChild(<span class="number">4</span>).GetChild(<span class="number">0</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">bookname = transform.GetChild(<span class="number">9</span>).GetComponent&lt;Text&gt;();</span><br><span class="line">bookname.text = <span class="string">&quot;《&quot;</span>+txt[<span class="number">51</span>] +<span class="string">&quot;》&quot;</span>; </span><br></pre></td></tr></table></figure><p>调用按钮点击相应事件，为 ‘前页’ ‘后页’ 按钮绑定相关操作</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">upbtn.onClick.AddListener(setindexup);</span><br><span class="line">downbtn.onClick.AddListener(setindexdown);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setindexup</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>;i &lt;<span class="number">5</span>;i++)</span><br><span class="line">        <span class="keyword">if</span>(index[i] &lt; <span class="number">49</span>)</span><br><span class="line">index[i] += <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setindexdown</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>;i &lt;<span class="number">5</span>;i++)</span><br><span class="line"><span class="keyword">if</span>(index[i] &gt; <span class="number">4</span>)</span><br><span class="line">index[i] -= <span class="number">4</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后在 Update() 函数中逐帧进行赋值操作，达到动态刷新的效果</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>;i &lt; <span class="number">5</span> ;i++)</span><br><span class="line"><span class="keyword">if</span>( index[i]<span class="number">-1</span> &gt; <span class="number">49</span> )</span><br><span class="line">comments[i].text = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">comments[i].text = txt[index[i] - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Ⅳ、抓取道指成分股数据"><a href="#Ⅳ、抓取道指成分股数据" class="headerlink" title="Ⅳ、抓取道指成分股数据"></a>Ⅳ、抓取道指成分股数据</h4><h5 id="具体内容-1"><a href="#具体内容-1" class="headerlink" title="具体内容"></a>具体内容</h5><p>在<a href="https://money.cnn.com/data/dow30/">https://money.cnn.com/data/dow30/</a> 上抓取道指成分股数据并解析其中30家公司的代码、名称和最近一次成交价，将结果放到一个列表中输出。</p><h5 id="实验步骤-1"><a href="#实验步骤-1" class="headerlink" title="实验步骤"></a>实验步骤</h5><p>采用 request 和 re 两个包来解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br></pre></td></tr></table></figure><p>确定查询网址路径</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&#x27;https://money.cnn.com/data/dow30/&#x27;</span></span><br></pre></td></tr></table></figure><p>由于网址发生变化，所以实际进入的网址为</p><img src="https://s2.loli.net/2022/07/26/mH5pUMjov8Kdg9b.png" style="zoom:67%;" /><p>通过r&#x3D;request.get（url）构造一个向服务器请求资源的url对象。</p><p>这个对象是Request库内部生成的。</p><p>这时候的r返回的是一个包含服务器资源的Response对象。包含从服务器返回的所有的相关资源。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(url)</span><br></pre></td></tr></table></figure><p>根据网页源代码，构建查匹配对应数据所需的正则表达式</p><p><img src="https://s2.loli.net/2022/07/26/D2TMdGf8sIoKmqO.png" alt="image-20220428173724771"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pattern = re.<span class="built_in">compile</span>(</span><br><span class="line">    <span class="string">&#x27;wsod_symbol&quot;&gt;(.*?)&lt;/a&gt; &lt;span title=&quot;(.*?)&quot;&gt;(.*?)&lt;/span&gt;&lt;/td&gt;&lt;td class=&quot;wsod_aRight&quot;&gt;&lt;span stream=&quot;last_(.*?)&lt;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>进行匹配查询</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># data 为一个含有4个元素的元组，包含所需数据</span></span><br><span class="line">data = re.findall(pattern, r.text)</span><br></pre></td></tr></table></figure><p> 数据处理：对数据进行筛选比对，选取所需要的 【公司的代码】、【名称】、【最近一次成交价】</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    <span class="comment"># print(&quot;i:&quot;,i)</span></span><br><span class="line">    m = (i[<span class="number">0</span>], i[<span class="number">1</span>], i[<span class="number">3</span>][-<span class="number">6</span>:])</span><br><span class="line">    <span class="comment"># 将其添加到列表中</span></span><br><span class="line">    dowdata.append(m)</span><br></pre></td></tr></table></figure><p>输出示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dowdata:</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/07/26/fi17MO3lLc2pzSd.png" alt="image-20220428174108983"></p><p>该结果对应时间：2022.4.28 -17:41</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;一、基本信息&quot;&gt;&lt;a href=&quot;#一、基本信息&quot; class=&quot;headerlink&quot; title=&quot;一、基本信息&quot;&gt;&lt;/a&gt;一、基本信息&lt;/h3&gt;&lt;p&gt;（略）&lt;/p&gt;
&lt;h3 id=&quot;二、实验目的&quot;&gt;&lt;a href=&quot;#二、实验目的&quot; class=&quot;headerlink&quot; title=&quot;二、实验目的&quot;&gt;&lt;/a&gt;二、实验目的&lt;/h3&gt;&lt;p&gt;要求学生掌握Socket编程技术及令牌总线协议工作过程&lt;/p&gt;
&lt;p&gt;$$&lt;br&gt;&amp;#x2F;&lt;br&gt;$$&lt;/p&gt;</summary>
    
    
    
    <category term="Unity" scheme="http://example.com/categories/Unity/"/>
    
    
    <category term="Unity" scheme="http://example.com/tags/Unity/"/>
    
    <category term="网络爬虫" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>简单水墨风格Shader</title>
    <link href="http://example.com/2022/07/27/%E6%B0%B4%E5%A2%A8%E9%A3%8E%E6%A0%BCshader/"/>
    <id>http://example.com/2022/07/27/%E6%B0%B4%E5%A2%A8%E9%A3%8E%E6%A0%BCshader/</id>
    <published>2022-07-27T09:47:18.100Z</published>
    <updated>2022-07-26T03:54:57.825Z</updated>
    
    <content type="html"><![CDATA[<h5 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a><strong>效果图</strong></h5><p><img src="https://s2.loli.net/2022/07/25/cwRglNjD6TOJZVk.png" alt="image-20220414191627658.png"></p><span id="more"></span><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 需要一个MainTex主纹理贴图、一个水墨笔刷贴图</span></span><br><span class="line"></span><br><span class="line">Shader <span class="string">&quot;Unlit/shuimo&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">    Properties</span><br><span class="line">    &#123;</span><br><span class="line">        _MainTex(<span class="string">&quot;Main&quot;</span>, <span class="number">2</span>D) = <span class="string">&quot;white&quot;</span> &#123;&#125;</span><br><span class="line">_Thred(<span class="string">&quot;Edge Thred&quot;</span> , <span class="built_in">Range</span>(<span class="number">0.01</span>,<span class="number">1</span>)) = <span class="number">0.25</span></span><br><span class="line">_Range(<span class="string">&quot;Edge Range&quot;</span> , <span class="built_in">Range</span>(<span class="number">0</span>,<span class="number">5</span>)) = <span class="number">1</span></span><br><span class="line">_Pow(<span class="string">&quot;Edge Intensity&quot;</span>,<span class="built_in">Range</span>(<span class="number">0</span>,<span class="number">5</span>))=<span class="number">1</span></span><br><span class="line">_BrushTex(<span class="string">&quot;Brush Texture&quot;</span>, <span class="number">2</span>D) = <span class="string">&quot;white&quot;</span> &#123;&#125;</span><br><span class="line">        _Saturation(<span class="string">&quot;Saturation&quot;</span> ,<span class="built_in">Range</span>(<span class="number">0</span>,<span class="number">1</span>)) = <span class="number">0</span></span><br><span class="line">        _BlenderRow(<span class="string">&quot;BlenderRow&quot;</span>,<span class="built_in">Range</span>(<span class="number">0</span>,<span class="number">1</span>)) = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">[<span class="built_in">Enum</span>(Opacity,<span class="number">1</span>,Darken,<span class="number">2</span>,Lighten,<span class="number">3</span>,Multiply,<span class="number">4</span>,Screen,<span class="number">5</span>,Overlay,<span class="number">6</span>,SoftLight,<span class="number">7</span>)]</span><br><span class="line">_BlendType(<span class="string">&quot;Blend Type&quot;</span>, Int) = <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    SubShader</span><br><span class="line">    &#123;</span><br><span class="line">        Tags &#123; <span class="string">&quot;RenderType&quot;</span>=<span class="string">&quot;Opaque&quot;</span> &#125;</span><br><span class="line">        LOD <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        Pass</span><br><span class="line">        &#123;</span><br><span class="line">            CGPROGRAM</span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> vertex vert</span></span><br><span class="line">            <span class="meta">#<span class="keyword">pragma</span> fragment frag</span></span><br><span class="line">            <span class="meta">#<span class="keyword">include</span> <span class="string">&quot;UnityCG.cginc&quot;</span></span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">struct</span> appdata</span><br><span class="line">            &#123;</span><br><span class="line">                float4 vertex : POSITION;</span><br><span class="line">                float2 uv : TEXCOORD0;</span><br><span class="line">                float3 normal : NORMAL;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">struct</span> <span class="title class_">v2f</span></span><br><span class="line">            &#123;</span><br><span class="line">                float2 uv : TEXCOORD0;</span><br><span class="line">                float4 vertex : SV_POSITION;</span><br><span class="line">                float3 worldPos : TEXCOORD1;</span><br><span class="line">                float3 worldNormal : TEXCOORD2;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            sampler2D _MainTex;</span><br><span class="line">            float4 _MainTex_ST;</span><br><span class="line">            sampler2D _BrushTex;</span><br><span class="line">            <span class="type">float</span> _BlendType;</span><br><span class="line">            <span class="type">float</span> _Thred;</span><br><span class="line">            <span class="type">float</span> _Range;</span><br><span class="line">            <span class="type">float</span> _Pow;</span><br><span class="line">            <span class="type">float</span> _Saturation;</span><br><span class="line">            <span class="type">float</span> _BlenderRow;</span><br><span class="line"></span><br><span class="line">            <span class="function">v2f <span class="title">vert</span> <span class="params">(appdata v)</span></span></span><br><span class="line"><span class="function">            </span>&#123;</span><br><span class="line">        v2f o;</span><br><span class="line">        o.vertex = <span class="built_in">UnityObjectToClipPos</span>(v.vertex);</span><br><span class="line">        o.uv = <span class="built_in">TRANSFORM_TEX</span>(v.uv, _MainTex);</span><br><span class="line">        o.worldPos = <span class="built_in">mul</span>(unity_ObjectToWorld,v.vertex).xyz;</span><br><span class="line">                o.worldNormal = <span class="built_in">UnityObjectToWorldNormal</span>(v.normal);</span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="function">fixed4 <span class="title">frag</span> <span class="params">(v2f i)</span> : SV_Target</span></span><br><span class="line"><span class="function">            &#123;</span></span><br><span class="line">                float3 ViewDir = <span class="built_in">normalize</span>(_WorldSpaceCameraPos.xyz - i.worldPos);</span><br><span class="line">                <span class="type">float</span> NdotV = <span class="built_in">max</span>( <span class="built_in">dot</span>(ViewDir,i.worldNormal) , <span class="number">0</span>);</span><br><span class="line">                fixed4 mainTex = <span class="built_in">tex2D</span>(_MainTex, i.uv);</span><br><span class="line">            fixed4 brushTex = <span class="built_in">tex2D</span>(_BrushTex, i.uv);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// fixed texGrey = (mainTex.r + mainTex.g + mainTex.b)*0.33; // 平均值法求灰度</span></span><br><span class="line">                <span class="comment">// GrayScale=0.299*R+0.578*G+0.114*B 加权平均求灰度</span></span><br><span class="line">                fixed texGrey = <span class="number">0.299</span> * mainTex.r + <span class="number">0.578</span> * mainTex.g + <span class="number">0.114</span> * mainTex.b;</span><br><span class="line">            texGrey = <span class="built_in">pow</span>(texGrey, <span class="number">0.3</span>);</span><br><span class="line">            texGrey *= <span class="number">1</span> - <span class="built_in">cos</span>(texGrey * <span class="number">3.14</span>);</span><br><span class="line">            fixed brushGrey = (brushTex.r + brushTex.g + brushTex.b)*<span class="number">0.33</span>;</span><br><span class="line"></span><br><span class="line">                fixed blend = texGrey * <span class="number">0.5</span> + brushGrey * <span class="number">0.5</span>;</span><br><span class="line">            fixed4 col = <span class="built_in">fixed4</span>(blend, blend, blend, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                fixed edge = <span class="built_in">pow</span>(NdotV, <span class="number">1</span>) / _Range;</span><br><span class="line">            edge = edge &gt; _Thred ? <span class="number">1</span> : edge;</span><br><span class="line">            edge = <span class="built_in">pow</span>(edge, _Pow);</span><br><span class="line">            fixed4 edgeColor = <span class="built_in">fixed4</span>(edge, edge, edge, edge);</span><br><span class="line"></span><br><span class="line">                col = edgeColor * (<span class="number">1</span> - edgeColor.a) + col * (edgeColor.a);</span><br><span class="line"></span><br><span class="line">                fixed4 rowtex =<span class="built_in">tex2D</span>(_MainTex,i.uv);</span><br><span class="line">                <span class="comment">//saturation饱和度：首先根据公式计算同等亮度情况下饱和度最低的值：</span></span><br><span class="line">    fixed minGray = <span class="number">0.2125</span> * rowtex.r + <span class="number">0.7154</span> * rowtex.g + <span class="number">0.0721</span> * rowtex.b;</span><br><span class="line">                fixed3 mingrayColor = <span class="built_in">fixed3</span>(minGray, minGray, minGray);</span><br><span class="line"><span class="comment">//根据Saturation在饱和度最低的图像和原图之间差值</span></span><br><span class="line">float3 RowColor = <span class="built_in">lerp</span>(mingrayColor, rowtex.rgb, _Saturation);</span><br><span class="line"></span><br><span class="line">                float3 blendrow = RowColor * (<span class="number">1</span> - _BlenderRow) + <span class="built_in">float3</span>(brushGrey,brushGrey,brushGrey) * _BlenderRow;</span><br><span class="line">                float3 finalColor = col * blendrow;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">fixed4</span>(finalColor,<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            ENDCG</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a><strong>实现方法</strong></h5><h6 id="一、求灰度图"><a href="#一、求灰度图" class="headerlink" title="一、求灰度图"></a>一、求灰度图</h6><p>对灰度图像的处理一般有以下四种方法:</p><p><strong>1.分量法</strong></p><p>该方法将彩色图像中的三分量的亮度作为三个灰度图像的灰度值，可根据应用需要选取一种灰度图像。即：可以选取RGB中的任一颜色通道作为灰度值。公式为：GrayScale1 &#x3D; R，GrayScale2 &#x3D; G，GrayScale3 &#x3D; B</p><p><strong>2.最大值法</strong></p><p>该方法将彩色图像中的三分量亮度的最大值作为灰度图的灰度值，一般的，该方法求取后的灰度图亮度最高。公式为：GrayScale &#x3D; max(R, G, B)</p><p><strong>3.平均值法</strong></p><p>该方法将彩色图像中的RGB三分量的颜色值来求取平均值作为灰度值。公式为：GrayScale &#x3D; (R+G+B) &#x2F; 3</p><p><strong>4.加权平均法</strong></p><p>该方法根据重要性及其它指标，将三个分量以不同的权值进行加权平均。由于人眼对绿色的敏感最高，对蓝色敏感最低，因此，按下式对RGB三分量进行加权平均能得到相对合理的灰度图像。公式为：GrayScale &#x3D; 0.299 *R + 0.578 *G + 0.114 *B</p><p>此处对主纹理采用加权平均法、对水墨笔刷采用平均值法</p><h6 id="二、利用混合公式混合颜色Texture和水墨笔触Texture"><a href="#二、利用混合公式混合颜色Texture和水墨笔触Texture" class="headerlink" title="二、利用混合公式混合颜色Texture和水墨笔触Texture"></a>二、利用混合公式混合颜色Texture和水墨笔触Texture</h6><p>图片混合的多种模式：<a href="https://www.cnblogs.com/kex1n/p/3663533.html">https://www.cnblogs.com/kex1n/p/3663533.html</a></p><h6 id="三、利用-VdotN-求边缘效果"><a href="#三、利用-VdotN-求边缘效果" class="headerlink" title="三、利用 VdotN 求边缘效果"></a>三、利用 VdotN 求边缘效果</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fixed edge = <span class="built_in">pow</span>(NdotV, <span class="number">1</span>) / _Range;</span><br><span class="line">edge = edge &gt; _Thred ? <span class="number">1</span> : edge;</span><br><span class="line">edge = <span class="built_in">pow</span>(edge, _Pow);</span><br><span class="line">fixed4 edgeColor = <span class="built_in">fixed4</span>(edge, edge, edge, edge);</span><br></pre></td></tr></table></figure><h6 id="四、降低原图饱和度，再将其与水墨笔刷进行混合-（可选项）"><a href="#四、降低原图饱和度，再将其与水墨笔刷进行混合-（可选项）" class="headerlink" title="四、降低原图饱和度，再将其与水墨笔刷进行混合 （可选项）"></a>四、降低原图饱和度，再将其与水墨笔刷进行混合 （可选项）</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fixed4 rowtex =<span class="built_in">tex2D</span>(_MainTex,i.uv);</span><br><span class="line"><span class="comment">//saturation饱和度：首先根据公式计算同等亮度情况下饱和度最低的值：</span></span><br><span class="line">fixed minGray = <span class="number">0.2125</span> * rowtex.r + <span class="number">0.7154</span> * rowtex.g + <span class="number">0.0721</span> * rowtex.b;</span><br><span class="line">fixed3 mingrayColor = <span class="built_in">fixed3</span>(minGray, minGray, minGray);</span><br><span class="line"><span class="comment">//根据Saturation在饱和度最低的图像和原图之间差值</span></span><br><span class="line">float3 RowColor = <span class="built_in">lerp</span>(mingrayColor, rowtex.rgb, _Saturation);</span><br><span class="line">float3 blendrow = RowColor * (<span class="number">1</span> - _BlenderRow) + <span class="built_in">float3</span>(brushGrey,brushGrey,brushGrey) * _BlenderRow;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h5 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;&lt;strong&gt;效果图&lt;/strong&gt;&lt;/h5&gt;&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2022/07/25/cwRglNjD6TOJZVk.png&quot; alt=&quot;image-20220414191627658.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Shader学习" scheme="http://example.com/categories/Shader%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="Unity" scheme="http://example.com/tags/Unity/"/>
    
    <category term="Shader" scheme="http://example.com/tags/Shader/"/>
    
  </entry>
  
  <entry>
    <title>暗通道去雾及两种超分算法的简单对比</title>
    <link href="http://example.com/2022/07/27/%E6%9A%97%E9%80%9A%E9%81%93%E5%8E%BB%E9%9B%BE%E5%8F%8A%E4%B8%A4%E7%A7%8D%E8%B6%85%E5%88%86%E7%AE%97%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E5%AF%B9%E6%AF%94/"/>
    <id>http://example.com/2022/07/27/%E6%9A%97%E9%80%9A%E9%81%93%E5%8E%BB%E9%9B%BE%E5%8F%8A%E4%B8%A4%E7%A7%8D%E8%B6%85%E5%88%86%E7%AE%97%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E5%AF%B9%E6%AF%94/</id>
    <published>2022-07-27T09:47:18.098Z</published>
    <updated>2022-07-26T03:54:38.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ⅰ、暗通道先验图像去雾霾"><a href="#Ⅰ、暗通道先验图像去雾霾" class="headerlink" title="Ⅰ、暗通道先验图像去雾霾"></a>Ⅰ、暗通道先验图像去雾霾</h2><p>参考论文：K. He, J. Sun and X. Tang, “Single Image Haze Removal Using Dark Channel Prior,” in IEEE  Transactions on Pattern Analysis and Machine Intelligence, vol. 33, no. 12, pp. 2341-2353,  Dec. 2011.</p><p>阅读地址：<a href="https://readpaper.com/pdf-annotate/note?noteId=696733953373192192&amp;pdfId=4531190175211610113">https://readpaper.com/pdf-annotate/note?noteId=696733953373192192&amp;pdfId=4531190175211610113</a></p><span id="more"></span><h3 id="一、论文简介"><a href="#一、论文简介" class="headerlink" title="一、论文简介"></a>一、论文简介</h3><p>在本文中，作者提出了一种简单而有效的图像先验-暗通道，用于去除单个输入图像中的雾霾。暗通道先验是一种对室外无雾图像的统计。它是基于一个关键的观察-在室外无雾图像中的大多数局部斑块包含一些像素，其强度在至少一个彩色通道非常低。利用这一先验和烟雾成像模型，我们可以直接估计雾霾的厚度，并恢复一幅高质量的无雾霾图像。在各种模糊图像上的结果表明了所提出的先验方法的有效性。</p><h3 id="二、具体过程介绍"><a href="#二、具体过程介绍" class="headerlink" title="二、具体过程介绍"></a>二、具体过程介绍</h3><p>在计算机视觉领域，存在一个对于雾霾图像的模型定义：<br>$$<br>I(x)&#x3D; J(x)t(x) + A(1-t(x))<br>$$<br>其中</p><p>$I(x)$ 为我们实际可以观测到的亮度，也可以理解为带雾的原图，是一个已知的值</p><p>$J(x)$ 可以理解为去雾之后的结果图像</p><p>$t(x)$ 为透射率（transmission from scene to camera）</p><p>$A$ 为全球大气光值（atmospheric light）</p><p><strong>最终目标</strong>：从 $I$ 中恢复出 $J$ 、$A$ 和 $t$  </p><h5 id="1、暗通道图像"><a href="#1、暗通道图像" class="headerlink" title="1、暗通道图像"></a>1、暗通道图像</h5><p>根据原文中的公式获取暗通道图像并进行腐蚀操作<br>$$<br>J^{dark}(x) &#x3D; \underset {c\in {r,g,b }}{min}  \ \underset {y \in \Omega(x) }{(\ min}\ (J^c(y)))<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">DarkChannel</span>(<span class="params">image, size</span>):</span><br><span class="line">    b, g, r = cv2.split(image)  <span class="comment"># 顺序是b,g,r，不是r,g,b</span></span><br><span class="line">    min_channel = cv2.<span class="built_in">min</span>(cv2.<span class="built_in">min</span>(r, g), b)  <span class="comment"># 得到三通道中的最小值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># cv2.getStructuringElement()</span></span><br><span class="line">    <span class="comment"># 这个函数的第一个参数表示内核的形状，有三种形状可以选择。</span></span><br><span class="line">    <span class="comment"># 腐蚀操作可以看做 将图像（或图像的一部分区域，我们称之为A）与核进行卷积</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 腐蚀（erosion）</span></span><br><span class="line">    <span class="comment"># 腐蚀就是原图中的高亮部分被腐蚀，效果图拥有比原图更小的高亮区域</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 膨胀和腐蚀的主要用途:</span></span><br><span class="line">    <span class="comment"># 1、消除噪声</span></span><br><span class="line">    <span class="comment"># 2、分割出独立的图像元素，在图像中连接相邻的元素</span></span><br><span class="line">    <span class="comment"># 3、寻找图像中明显的极大值或极小值区</span></span><br><span class="line">    <span class="comment"># 4、求出图像的梯度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用滤波窗口大小为15*15</span></span><br><span class="line">    kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (size, size))</span><br><span class="line">    dark_channel = cv2.erode(min_channel, kernel)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dark_channel</span><br></pre></td></tr></table></figure><p>腐蚀前：</p><img src="https://s3.bmp.ovh/imgs/2022/06/15/fe68929e1cd6270c.jpg" style="zoom:67%;" /><p>腐蚀后：</p><img src="https://s3.bmp.ovh/imgs/2022/06/15/b1e4bbdb4fe5aae0.jpg" style="zoom:67%;" /><h5 id="2、大气光值"><a href="#2、大气光值" class="headerlink" title="2、大气光值"></a>2、大气光值</h5><p>由论文可知，如果有一个图像中，存在一个无限远的距离的像素存在，这个时候，此像素的透射率几乎为0。这个图像中最亮最亮的值所在的像素可以被看做是雾遮盖的程度最大也是其值可以看做是几乎等同于 $A$ 。 </p><p>我们可以从暗通道图中求取大气光值 $A$</p><ul><li>在暗通道图中按照亮度的大小提取最亮的前0.1%的像素</li><li>在原始雾图I(x)中找对应位置上具有最高亮度的点的值，此处我们通过累加求平均值获得相对稳定值</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Atmospheric_light</span>(<span class="params">image, dark_channel</span>):</span><br><span class="line">    image_size = image.shape[<span class="number">0</span>] * image.shape[<span class="number">1</span>]  <span class="comment"># 总像素数量</span></span><br><span class="line">    pixel_num = <span class="built_in">int</span>(<span class="built_in">max</span>(math.floor(image_size / <span class="number">1000</span>), <span class="number">1</span>))  <span class="comment"># 提取的像素数量</span></span><br><span class="line"></span><br><span class="line">    dark_vec = dark_channel.reshape(image_size)  <span class="comment"># 将暗通道图的值转为一维</span></span><br><span class="line">    image_vec = image.reshape(image_size, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    indices = dark_vec.argsort()[-pixel_num:]  <span class="comment"># 前0.1%的像素下标</span></span><br><span class="line"></span><br><span class="line">    atmosphere_max = np.zeros([<span class="number">1</span>, <span class="number">3</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 求取平均值</span></span><br><span class="line">    <span class="keyword">for</span> ind <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, pixel_num):</span><br><span class="line">        atmosphere_max += image_vec[indices[ind]]</span><br><span class="line">    A = atmosphere_max / pixel_num</span><br><span class="line">    <span class="keyword">return</span> A</span><br></pre></td></tr></table></figure><h5 id="3、透射率"><a href="#3、透射率" class="headerlink" title="3、透射率"></a>3、透射率</h5><p>根据已有公式，论文中经过推导得到的透射率计算公式如下：<br>$$<br>t(x) &#x3D; \ 1- \omega \min\limits_c (\min\limits_{y \in \Omega(x)} ( \frac{I^c(y)}{A^c}) )<br>$$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">TransmissionEstimate</span>(<span class="params">image, A, size</span>):</span><br><span class="line">    omega = <span class="number">0.95</span> <span class="comment"># 论文里一般采用0.95</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">        image[:, :, i] /= A[i]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 论文里说明的后者是image图像的暗通道</span></span><br><span class="line">    transmission = <span class="number">1</span> - omega * DarkChannel(image, size)</span><br><span class="line">    <span class="keyword">return</span> transmission</span><br></pre></td></tr></table></figure><p>根据论文中的说明，实际上，$\min\limits_c (\min\limits_{y \in \Omega(x)} ( \frac{I^c(y)}{A^c}) )$   就相当于 $ \frac{I^c(y)}{A^c}$  的暗通道图像</p><h5 id="4、引导滤波-Guided-Filter"><a href="#4、引导滤波-Guided-Filter" class="headerlink" title="4、引导滤波 (Guided Filter )"></a>4、引导滤波 (Guided Filter )</h5><p>（该部分为优化效果，未在原文中提出，此处的实现主要参考自 <a href="https://zhuanlan.zhihu.com/p/36813673%EF%BC%89">https://zhuanlan.zhihu.com/p/36813673）</a></p><p>（同时opencv 3.0 中也添加了guided filter的API，可以直接调用）</p><p>引导图滤波器是一种自适应权重滤波器，能够在平滑图像的同时起到保持边界的作用</p><p>优点：</p><ul><li>能够克服双边滤波的梯度翻转现象，在滤波后图像的细节上更优</li><li>较之传统双边滤波效率高，时间复杂度为O(N)，N是像素个数</li></ul><p>原论文中的 Guided Filter 的伪代码如下<br>$$<br>1:mean_I &#x3D; f_{mean} (I) \<br>\   \ \ \ \ mean_p &#x3D; f_{mean} (p)\<br>\  \ \  \ \ \ \ \ corr_I &#x3D; f_{mean} (I. *I)\<br>\   \ \ \ \ \ \ \ \ corr_{Ip} &#x3D; f_{mean} (I.*p)\</p><p>2:var_I &#x3D; corr_I - mean_I.*mean_I \<br>\ \ \ \ \ \ \ \  \ \ \ \ cov_{Ip} &#x3D; -corr{Ip} - mean_I. *mean_p \</p><p>3:a &#x3D; cov_{Ip}.&#x2F;(var_I + \epsilon) \<br>\ \ \ \ \ \ \ \ \  b &#x3D; mean_p - a.*mean_I\</p><p>4:mean_a &#x3D; f_{mean}(a)<br>\ \ \ \ \ \ mean_b  &#x3D; f_{mean}(b) \</p><p>5:q &#x3D; mean_a. * I + mean_b<br>$$</p><p>依照该伪代码在python中使用 opencv 实现如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Guidedfilter</span>(<span class="params">image, p, r, eps</span>):</span><br><span class="line">    mean_I = cv2.boxFilter(image, cv2.CV_64F, (r, r))</span><br><span class="line">    mean_p = cv2.boxFilter(p, cv2.CV_64F, (r, r))</span><br><span class="line">    corr_I = cv2.boxFilter(image * image, cv2.CV_64F, (r, r))</span><br><span class="line">    corr_IP = cv2.boxFilter(image * p, cv2.CV_64F, (r, r))</span><br><span class="line"></span><br><span class="line">    var_I = corr_I - mean_I * mean_I</span><br><span class="line">    cov_Ip = corr_IP - mean_I * mean_p</span><br><span class="line"></span><br><span class="line">    a = cov_Ip / (var_I + eps)</span><br><span class="line">    b = mean_p - a * mean_I</span><br><span class="line"></span><br><span class="line">    mean_a = cv2.boxFilter(a, cv2.CV_64F, (r, r))</span><br><span class="line">    mean_b = cv2.boxFilter(b, cv2.CV_64F, (r, r))</span><br><span class="line"></span><br><span class="line">    q = mean_a * image + mean_b</span><br><span class="line">    <span class="keyword">return</span> q</span><br></pre></td></tr></table></figure><p><strong>【未使用引导滤波的结果】</strong></p><img src="https://s3.bmp.ovh/imgs/2022/06/15/1990a876e2ed5b82.jpg" style="zoom:80%;" /><p><strong>【使用引导滤波的结果】</strong></p><img src="https://s3.bmp.ovh/imgs/2022/06/15/3bdc4fd9fb6ad79a.jpg" style="zoom:80%;" /><h5 id="5、去雾之后的结果图像-J-x"><a href="#5、去雾之后的结果图像-J-x" class="headerlink" title="5、去雾之后的结果图像 $J(x)$"></a>5、去雾之后的结果图像 $J(x)$</h5><p>由论文中的公式<br>$$<br>J(x) &#x3D; \frac{I(x)-A}{max(t(x), t_0)} + A<br>$$<br>可得</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Recover</span>(<span class="params">image, t, A, t0 = <span class="number">0.1</span></span>):</span><br><span class="line">    res = np.empty(image.shape,<span class="string">&#x27;float64&#x27;</span>)</span><br><span class="line">    t = cv2.<span class="built_in">max</span>(t, t0) <span class="comment"># 论文中的t_0 为0.1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">        res[:, :, i] = (image[:, :, i] - A[i]) / t + A[i]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><p>在论文中提到一般给 $t_0$ 的取值为 0.1</p><h3 id="三、实验结果及分析"><a href="#三、实验结果及分析" class="headerlink" title="三、实验结果及分析"></a>三、实验结果及分析</h3><p><strong>【实验结果】</strong></p><img src="https://s3.bmp.ovh/imgs/2022/06/15/bc1d58fbe362e4c3.jpg" style="zoom:80%;" /><img src="https://s1.ax1x.com/2022/06/15/XoTLPf.png" alt="XoTLPf.png" style="zoom:80%;" /><img src="https://s3.bmp.ovh/imgs/2022/06/15/3bdc4fd9fb6ad79a.jpg" style="zoom:80%;" /><p>当去雾之后，画面整体颜色偏暗，对比度较高</p><p>不过我在实验中发现对一下代码进行修改可得到一些不同的结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">TransmissionEstimate</span>(<span class="params">image, A, size</span>):</span><br><span class="line">    omega = <span class="number">0.95</span></span><br><span class="line">    <span class="comment"># image_temp = np.empty(image.shape,&#x27;float64&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">3</span>):</span><br><span class="line">        <span class="comment"># image_temp[:, :, i] = image[:, :, i] / A[i]</span></span><br><span class="line">        image /= A[i]</span><br><span class="line">    <span class="comment"># 论文里说明的后者是image图像的暗通道</span></span><br><span class="line">    <span class="comment"># transmission = 1 - omega * DarkChannel(image_temp, size)</span></span><br><span class="line">    transmission = <span class="number">1</span> - omega * DarkChannel(image, size)</span><br><span class="line">    <span class="keyword">return</span> transmission</span><br></pre></td></tr></table></figure><img src="https://s1.ax1x.com/2022/06/15/Xo75WT.jpg" alt="Xo75WT.jpg" style="zoom:80%;" /><p>在计算透射率时直接对原图除以大气光强，可以使得最终结果更加明亮，类似一种高对比度、高曝光的效果</p><p>在整个实验中，Guided filter起到了很大的作用，并且一开始为用任何优化实现原文时，得到的结果并不好，对于数据集中的雾霾较为浓厚的图片，整体有一种偏蓝的效果，我猜测应该是图片大多位于室内，再加上人为造成了浓雾弥漫的效果，使得大气光值的计算出现了问题。</p><h2 id="Ⅱ、超分辨率算法-Real-ESRGAN-和-Real-CUGAN"><a href="#Ⅱ、超分辨率算法-Real-ESRGAN-和-Real-CUGAN" class="headerlink" title="Ⅱ、超分辨率算法 Real-ESRGAN 和 Real-CUGAN"></a>Ⅱ、超分辨率算法 Real-ESRGAN 和 Real-CUGAN</h2><h3 id="一、相关论文及链接"><a href="#一、相关论文及链接" class="headerlink" title="一、相关论文及链接"></a>一、相关论文及链接</h3><p>腾讯——《Real-ESRGAN: Training Real-World Blind Super-Resolution with Pure Synthetic Data》</p><p>论文地址：<a href="https://arxiv.org/pdf/2107.10833.pdf%EF%BC%88%E4%B8%8B%E6%96%87%E4%B8%AD%E6%89%80%E4%BB%A5%E5%85%AC%E5%BC%8F%E5%8F%8A%E5%9B%BE%E7%89%87%E5%9D%87%E5%BC%95%E7%94%A8%E8%87%AA%E8%AF%A5%E8%AE%BA%E6%96%87%EF%BC%89">https://arxiv.org/pdf/2107.10833.pdf（下文中所以公式及图片均引用自该论文）</a></p><p>项目地址：<a href="https://github.com/XPixelGroup/BasicSR">https://github.com/XPixelGroup/BasicSR</a></p><p>B站——《Real Cascade U-Nets for Anime Image Super Resolution》</p><p>项目地址：<a href="https://github.com/bilibili/ailab/tree/main/Real-CUGAN">https://github.com/bilibili/ailab/tree/main/Real-CUGAN</a></p><p>超分重建相关数据集下载地址：<a href="https://data.vision.ee.ethz.ch/cvl/DIV2K/">https://data.vision.ee.ethz.ch/cvl/DIV2K/</a></p><p>Squirrel Anime Enhance下载地址：<a href="https://github.com/Justin62628/Squirrel-RIFE/releases/tag/v0.0.3">https://github.com/Justin62628/Squirrel-RIFE/releases/tag/v0.0.3</a></p><h3 id="二、超分辨率"><a href="#二、超分辨率" class="headerlink" title="二、超分辨率"></a>二、超分辨率</h3><h5 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h5><p>超分辨率是计算机视觉的一个经典应用。SR是指通过软件或硬件的方法，从观测到的低分辨率<a href="https://so.csdn.net/so/search?q=%E5%9B%BE%E5%83%8F%E9%87%8D%E5%BB%BA&spm=1001.2101.3001.7020">图像重建</a>出相应的高分辨率图像（说白了就是提高分辨率），在监控设备、卫星图像遥感、数字高清、显微成像、视频编码通信、视频复原和医学影像等领域都有重要的应用价值。</p><p>传统的超分辨率重建技术有基于插值的图像超分辨率和基于重建的图像超分辨率等</p><h5 id="2、基于深度学习的图像超分辨率重建技术"><a href="#2、基于深度学习的图像超分辨率重建技术" class="headerlink" title="2、基于深度学习的图像超分辨率重建技术"></a>2、基于深度学习的图像超分辨率重建技术</h5><p>基于深度学习的图像超分辨率重建的研究流程如下：</p><ol><li><p>首先找到一组原始图像 Image1</p></li><li><p>然后将这组图片降低分辨率为图像 Image2</p></li><li><p>通过<strong>各种神经网络结构</strong>，将 Image2 超分辨率重建为 Image3</p></li><li><p>比较Image1与Image3，验证超分辨率重建的效果，根据效果调节神经网络中的节点模型和参数</p></li><li><p>反复执行，直到达到较好的效果</p></li></ol><h5 id="3、两种常用的评价超分的指标——PSNR和SSIM"><a href="#3、两种常用的评价超分的指标——PSNR和SSIM" class="headerlink" title="3、两种常用的评价超分的指标——PSNR和SSIM"></a>3、两种常用的评价超分的指标——PSNR和SSIM</h5><p>对超分辨率的质量进行定量评价常用的两个指标是 PSNR (Peak Signal-to-Noise Ratio)和SSIM（Structure Similarity）。这两个值越高代表重建结果的像素值和标准越接近。</p><h6 id="PSNR（Peak-Signal-to-Noise-Ratio）峰值信噪比"><a href="#PSNR（Peak-Signal-to-Noise-Ratio）峰值信噪比" class="headerlink" title="PSNR（Peak Signal to Noise Ratio）峰值信噪比"></a>PSNR（Peak Signal to Noise Ratio）峰值信噪比</h6><p>$$<br>MSE &#x3D; \frac{1}{H ×W} \sum \limits_{i &#x3D; 1}^H \sum \limits_{j&#x3D;1}^W(X(i,j)-Y(i,j))^2<br>$$</p><p>$$<br>PSNR &#x3D; 10log_{10}(\frac{(2^n-1)^2}{MSE})<br>$$</p><p>其中 MSE 表示当前图像 X 与参考图像 Y 的均方误差，H、W分别为图像的高和宽，n为每像素的比特数（比如灰度图的单个像素占8bit）</p><p>PSNR 的单位是 db，数值越大表示失真越小</p><h6 id="SSIM（Structure-Similarity-）结构相似性"><a href="#SSIM（Structure-Similarity-）结构相似性" class="headerlink" title="SSIM（Structure Similarity ）结构相似性"></a>SSIM（Structure Similarity ）结构相似性</h6><p>$$<br>SSIM(x,y) &#x3D; \frac{(2\mu_x\mu_y + c_1) (2\sigma_{xy} +c_2)}  {(\mu_x^2 +\mu_y^2+c_1) (\sigma_x^2+\sigma_y^2+c_2)}<br>$$</p><p>其中 $u$ 为平均值、$\sigma^2$ 为方差，$\sigma_{xy}$ 为协方差 ，$c_1 &#x3D; (k_1L)^2$，$c_2 &#x3D; (k_2L)^2$</p><p>是用来维持稳定的常数，$L$ 是像素值的动态范围。$k_1$ &#x3D; 0.01 ,$k_2$ &#x3D; 0.03</p><p>结构相似性的范围为-1到1，当两张图像一模一样时，SSIM的值等于1。</p><h3 id="三、Real-ESRGAN"><a href="#三、Real-ESRGAN" class="headerlink" title="三、Real-ESRGAN"></a>三、Real-ESRGAN</h3><p>由腾讯ARC实验室发表。在单张图片超分辨率(Single Image Super-resolution)的问题中，许多方法都采用传统的 Bicubic 方法实现降采样，但是这与现实世界的降采样情况不同，太过单一。盲超分辨率(Blind Super-resolution)旨在恢复未知且复杂的退化的低分辨率图像。根据其使用的降采样方式不同，可以分为显式建模(explicit modeling)和隐式建模(implicit modeling)。</p><ul><li>显式建模：经典的退化模型由模糊、降采样、噪声和 JPEG压缩组成。但是现实世界的降采样模型过于复杂，仅通过这几个方式的简单组合无法达到理想的效果。</li><li>隐式建模：依赖于学习数据分布和采用 GAN 来学习退化模型，但是这种方法受限于数据集，无法很好的泛化到数据集之外分布的图像</li></ul><p><strong>【降级模型】</strong></p><p>First-order降级模型如下： </p><img src="https://s2.loli.net/2022/07/26/Mp7DkyUAfNn2Bmx.png" alt="image-20220616171654048" style="zoom: 67%;" /><p>其中，x代表降级后的图像，D代表降级函数，y代表原始图像，k代表模糊核，r代表缩小比例，n代表加入的噪声，JPEG代表进行压缩。</p><p>在现实世界中，图像分辨率的退化通常是由多种不同的退化复杂组合而成的。</p><p>因此，作者将经典的一阶退化模型(“first-order” degradation model)拓展现实世界的高阶退化建模(“high-order” degradation modeling)，即利用多个重复的退化过程建模，每一个退化过程都是一个经典的退化模型。但是为了平衡简单性和有效性，作者在代码中实际采用的是二阶退化模型(“second-order” degradation model)。流程如下图所示：</p><img src="https://s1.ax1x.com/2022/06/15/XTTbt0.png" alt="XTTbt0.png" style="zoom:80%;" /><ul><li>对于模糊核k，本方法使用各项同性（isotropic）和各向异性（anisotropic）的高斯模糊核。</li><li>对于Resize操作，常用的方法又双三次插值、双线性插值、区域插值—由于最近邻插值需要考虑对齐问题，所以不予以考虑。在执行缩小操作时，本方法从提到的3种插值方式中随机选择一种。</li><li>对于噪声操作，本方法同时加入高斯噪声和服从泊松分布的噪声。同时，根据待超分图像的通道数，加入噪声的操作可以分为对彩色图像添加噪声和对灰度图像添加噪声。</li><li>JPEG压缩，本方法通过从[0, 100]范围中选择压缩质量，对图像进行JPEG压缩，其中0表示压缩后的质量最差，100表示压缩后的质量最好。</li></ul><p>First-order由于使用相对单调的降级方法，其实很难模仿真实世界中的图像低分辨模糊情况。因此，作者提出的High-order其实是为了使用更复杂的降级方法，更好的模拟真实世界中的低分辨模糊情况，从而达到更好的学习效果。</p><p>文中提出的高阶降级模型公式如下：<br>$$<br>x &#x3D; D^n(y)&#x3D; (D_n \circ\cdot\cdot\cdot D_2 \circ D_1)(y)<br>$$<br>上式，其实就是对First-order进行多次重复操作，也就是每一个D都是执行一次完整的First-order降级，作者通过实验得出，当执行2次First-order时生成的数据集训练效果最好</p><p><strong>【sinc filter】</strong></p><p>之后还设置sinc filter来模拟振铃和过冲伪影现象，$sinc$ 滤波器的核如下：<br>$$<br>k(i,j) &#x3D; \frac{\omega_c}{2\pi \sqrt {i^2 + j^2}}J _1(\omega_c \sqrt{i^2 + j^2})<br>$$<br>其中 $(i,j)$ 为核的坐标，$w_c$ 为截止频率，$J_1$ 为一阶的第一种修正<em>Bessel</em>函数。</p><img src="https://pic.imgdb.cn/item/62aaf3240947543129f469b7.png" style="zoom:67%;" /><p>上图为不同截止频率下的振铃和过冲伪影效果</p><p>但是因为采用了高阶退化模型，使得退化空间相比于 ESRGAN 来说大得多，训练也就更加具有挑战性。因此作者在 ESTGAN 的基础上做了两个改动：</p><ul><li>使用 U-Net 判别器替换 ESRGAN 中使用的 VGG 判别器</li><li>引入 spectral normalization 来使得训练更加稳定，并减少 artifacts。</li></ul><p><strong>【生成网络模型】</strong></p><p>在网络模型方面，Real-ESRGAN扩展了原来的ESRGAN，同时支持x1,x2,x4。Real-ESRGAN采用与ESRGAN相同的生成网络。对于比例因子×2和×1，使用 pixel-unshuffle 操作（可理解为通过扩大图像通道而对图像尺寸进行压缩），以降低图像分辨率为前提，对图像通道数进行扩充，然后将处理后的图像输入网络进行超分辨重建。</p><p><img src="https://pic.imgdb.cn/item/62aaef2e0947543129e9b99c.png"></p><p><strong>【对抗网络模型】</strong></p><p>由于使用的复杂的构建数据集的方式，所以需要使用更先进的判别器对生成图像进行判别。之前的ESRGAN的判别器更多的集中在图像的整体角度判别真伪，而使用U-Net 判别器可以在像素角度，对单个生成的像素进行真假判断，这能够在保证生成图像整体真实的情况下，注重生成图像细节。</p><img src="https://pic.imgdb.cn/item/62aafe5109475431290fb6c0.png" style="zoom:67%;" /><p><strong>【训练方法】</strong></p><ul><li>预训练一个以 PSNR 为目标的模型，并采用 L1 loss，得到 Real-ESRNet</li><li>用 Real-ESRNet 初始化 Real-ESRGAN 中的 Generator，然后训练 Real-ESRGAN，采用 L1 Loss、perceptual loss 和 GAN loss 三种组合的 loss。</li></ul><p><strong>【实验结果】</strong></p><p><img src="https://pic.imgdb.cn/item/62aafea70947543129109d46.png"></p><h3 id="四、Real-ESRGAN-和-Real-CUGAN性能对比"><a href="#四、Real-ESRGAN-和-Real-CUGAN性能对比" class="headerlink" title="四、Real-ESRGAN 和 Real-CUGAN性能对比"></a>四、Real-ESRGAN 和 Real-CUGAN性能对比</h3><p>详细对比（以下表格在 Real-CUGAN 项目中可见）</p><table><thead><tr><th></th><th>Real-ESRGAN(Anime6B)</th><th>Real-CUGAN</th></tr></thead><tbody><tr><td>训练集</td><td>私有二次元训练集，量级与质量未知</td><td>百万级高清二次元patch dataset</td></tr><tr><td>推理耗时(1080P)</td><td>2.2x</td><td>1x</td></tr><tr><td>效果(见对比图)</td><td>锐化强度最大，容易改变画风，线条可能错判，虚化区域可能强行清晰化</td><td>更锐利的线条，更好的纹理保留，虚化区域保留</td></tr><tr><td>兼容性</td><td>PyTorch支持，VapourSynth支持，NCNN支持</td><td>同Waifu2x，结构相同，参数不同，与Waifu2x无缝兼容</td></tr><tr><td>强度调整</td><td>不支持</td><td>已完成4种降噪程度版本和保守版，未来将支持调节不同去模糊、去JPEG伪影、锐化、降噪强度</td></tr><tr><td>尺度</td><td>仅支持4倍</td><td>已支持2倍、3倍、4倍，1倍训练中</td></tr></tbody></table><h3 id="五、Squirrel-Anime-Enhance"><a href="#五、Squirrel-Anime-Enhance" class="headerlink" title="五、Squirrel Anime Enhance"></a>五、Squirrel Anime Enhance</h3><img src="https://pic.imgdb.cn/item/62ab0b1509475431292e8fa5.png" style="zoom:67%;" /><p>Squirrel Anime Enhance是一款基于多个开源超分算法的中文超分软件，具有以下优势：</p><ol><li>集成了 realCUGAN, realESR, waifu2x 三种超分算法</li><li>拥有友好的 GUI 图形界面，方便使用</li><li>使用pipe传输视频帧，无需拆帧到本地，拯救硬盘</li><li>更小的显存、内存占用，更快的速度</li><li>拥有预览界面，能更好地了解超分情况</li></ol><p>安装较为简单，解压后，双击启动SAE.bat即可启动软件</p><p><strong>【使用方式】</strong></p><p>在如下界面设置输入的图片或视频文件或其所在文件夹，并设置输出文件夹</p><img src="https://pic.imgdb.cn/item/62ab0b2809475431292ebb18.png" style="zoom:67%;" /> <p>在如下界面设置超分算法与模型，目前主要集成了realCUGAN, realESR,和waifu2x三种超分算法，每一种超分算法下都有相对应的超分模型。</p><img src="https://pic.imgdb.cn/item/62ab0b4509475431292efd9b.png" style="zoom:67%;" /><p><strong>waifu2x:</strong></p><ul><li>models cunet：一般用于动漫超分</li><li>models photo：一般用于实拍</li><li>models style anime：一般用于老动漫</li></ul><p><strong>realESR:</strong></p><ul><li>realESRGAN模型，目前支持2x和4x</li><li>realESRNet模型：效果较为模糊，细节处不够精密，个人感觉不如realESRGAN模型</li></ul><p><strong>realCUGAN：</strong></p><ul><li>up2x-latest-conservative pth</li><li>up2x-latest-denoise_2.pth</li><li>up3x-latest-consevative.pth </li><li>up3x-latest- denoise_3.pth</li><li>up4x-latest-conservative pth</li><li>up4x-latest-denoise_3.pth</li><li>up4x-latest-no denoise.pth</li></ul><p>其中 Denoise 为降噪版，主要针对较多噪声的情况，conservative为保守版，处理效果较为保守，不会造成严重的失真。No-Denoise为无降噪版，较为通用。</p><p>输出分辨率预设：提供倍数及具体像素值的选择</p><p>在以上设置完成后，点击一键压制可以开始进行超分操作。</p><p><strong>【运行界面】</strong></p><img src="https://pic.imgdb.cn/item/62ab0b5709475431292f28e9.png" style="zoom:67%;" /><h3 id="六、实验结果"><a href="#六、实验结果" class="headerlink" title="六、实验结果"></a>六、实验结果</h3><p>对于Real-ESRGAN 和 Real-CUGAN，下载其在项目地址中公布的release发行版本</p><img src="https://s3.bmp.ovh/imgs/2022/06/16/0d60a96c93c8bc93.png" style="zoom: 67%;" /><img src="https://s3.bmp.ovh/imgs/2022/06/16/7830d22fa7fecc14.png" style="zoom: 67%;" /><p>通过调用一下命令来运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./realesrgan-ncnn-vulkan.exe -i 输入图像.jpg -o 输出图像.png -n 模型名字</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">./realcugan-ncnn-vulkan.exe -i input.jpg -o output.png</span></span><br></pre></td></tr></table></figure><p><strong>【结果展示】</strong></p><p>[^分辨率说明]: 由于Real-ESRGAN 目前仅支持 X4 ，所以分辨率均使用4倍</p><p>原图：分辨率为1600 × 1055</p><img src="https://s3.bmp.ovh/imgs/2022/06/16/e8d6883be399c3e7.jpeg" style="zoom:33%;" /><p>结果图：分辨率为 6400 × 4220</p><p>左为 Real-ESRGAN                      右图为 Real-CUGAN</p><p><img src="https://pic.imgdb.cn/item/62aaeb4d0947543129de78b0.jpg"></p><p>原图：分辨率为1920 × 1080</p><img src="https://pic.imgdb.cn/item/62aaeb6b0947543129dec5d2.jpg" style="zoom: 33%;" /><p>结果图：分辨率为 7680 × 4320</p><p>左为 Real-ESRGAN                      右图为 Real-CUGAN</p><p><img src="https://pic.imgdb.cn/item/62aaebc00947543129df9a05.jpg"></p><p>原图：分辨率为120 × 80</p><img src="https://pic.imgdb.cn/item/62aaebd00947543129dfc194.jpg" style="zoom:200%;" /><p>结果图：分辨率为 7680 × 4320</p><p>左为 Real-ESRGAN                      右图为 Real-CUGAN</p><p><img src="https://pic.imgdb.cn/item/62aaebdf0947543129dfe26d.jpg"></p><p><strong>【结果分析】</strong></p><p>本机环境为 Intel(R) Core(TM) i5-9300H CPU @ 2.40GHz  2.40 和  GeForce GTX 1650 ，性能较差 ，无法用于训练。在运行耗时方面，在直接使用exe 文件运行时对于一张标准的 1920 ×1080 图片，Real-ESRGAN 耗时2分钟左右，而Real-CUGAN 仅需四五秒。目前的Real-ESRGAN 仅支持图片4倍放大超分辨率，而Real-CUGAN支持2、3、4倍，使得实验比较均使用×4分辨率进行。总体而言，B站的 Real-CUGAN 效果较好，耗时较短，从我个人的肉眼观察角度出发，腾讯的RealESRGAN纹理保留性较差，较为模糊、细节有所丢失，表现较弱，而B站的 Real-CUGAN对于分辨率较高的图片细节处更为丰富，对于原图较为明亮的图片超分后也可以很好的保持光照亮度。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;Ⅰ、暗通道先验图像去雾霾&quot;&gt;&lt;a href=&quot;#Ⅰ、暗通道先验图像去雾霾&quot; class=&quot;headerlink&quot; title=&quot;Ⅰ、暗通道先验图像去雾霾&quot;&gt;&lt;/a&gt;Ⅰ、暗通道先验图像去雾霾&lt;/h2&gt;&lt;p&gt;参考论文：K. He, J. Sun and X. Tang, “Single Image Haze Removal Using Dark Channel Prior,” in IEEE  Transactions on Pattern Analysis and Machine Intelligence, vol. 33, no. 12, pp. 2341-2353,  Dec. 2011.&lt;/p&gt;
&lt;p&gt;阅读地址：&lt;a href=&quot;https://readpaper.com/pdf-annotate/note?noteId=696733953373192192&amp;amp;pdfId=4531190175211610113&quot;&gt;https://readpaper.com/pdf-annotate/note?noteId=696733953373192192&amp;amp;pdfId=4531190175211610113&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CV" scheme="http://example.com/categories/CV/"/>
    
    
    <category term="CV" scheme="http://example.com/tags/CV/"/>
    
  </entry>
  
  <entry>
    <title>基于Unity和MySQL的数据库课设</title>
    <link href="http://example.com/2022/07/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/"/>
    <id>http://example.com/2022/07/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%BE%E7%A8%8B%E5%AE%9E%E9%AA%8C/</id>
    <published>2022-07-27T09:47:18.096Z</published>
    <updated>2022-07-26T03:54:54.285Z</updated>
    
    <content type="html"><![CDATA[<p>(前排提示:为了凑字数导致内容较水)</p><h4 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h4><p>本实验采用的数据库为MySQL数据库，其具有体积小、速度快等优点。本实验的GUI部分采用Unity3D引擎制作，通过编写C#脚本挂载到Unity引擎中，实现了Unity与MySQL之间的连接。在完成基础实验一至五的前提上，依照要求实现了一个小型书籍信息管理系统 ，具有增删改查等基本功能，同时还可以根据一定要求进行排序，并且创建了两个图表对数据信息进行汇总，便于后续分析。</p><h4 id="关键词"><a href="#关键词" class="headerlink" title="关键词"></a>关键词</h4><p>MySQL、Unity、、C#、书籍信息管理</p><span id="more"></span><h2 id="一、实验要求"><a href="#一、实验要求" class="headerlink" title="一、实验要求"></a><strong>一、实验要求</strong></h2><ul><li>理解 SQL 定义功能</li><li>熟练掌握 SQL 操纵功能</li><li>了解 SQL 数据控制功能。</li><li>熟练掌握 Oracle、SQL Server、MySQL、DB2、Sybase 或 PostgreSQL 等对数据库的管理和操作，可以采用华为 OpenGauss 数据库。熟练掌握 Visual C++(MFC)、C#、 Qt、Java、PHP 或 Python 等访问数据库的方法，编写学生通讯录或学生选课（不建议）或其他类似的一个小型管理信息系统。</li></ul><p><strong>【关于小型管理信息系统】</strong></p><p>熟练掌握 Visual C++、C#、Qt、Java、PHP 或 Python 等访问数据库的方法， 设计和实现学生通讯录或学生选课或类似的一个小型管理信息系统。要求具有数 据的增加、删除、修改和查询的基本功能，并尽可能提供较多的查询功能，集成 一半以上实验一～实验五的功能，用户界面要友好。可选内容（加分项）：数据库中存放 100 万条记录，测试访问时间；如效率较低，提供优化方案。</p><h2 id="二、实验依赖"><a href="#二、实验依赖" class="headerlink" title="二、实验依赖"></a><strong>二、实验依赖</strong></h2><h3 id="1、MySQL"><a href="#1、MySQL" class="headerlink" title="1、MySQL"></a>1、MySQL</h3><h4 id="Ⅰ、MySQL-特点"><a href="#Ⅰ、MySQL-特点" class="headerlink" title="Ⅰ、MySQL 特点"></a>Ⅰ、MySQL 特点</h4><ul><li>功能强大</li><li>支持跨平台</li><li>运行速度快</li><li>支持面向对象</li><li>安全性高</li><li>成本低</li><li>支持各种开发语言</li><li>数据库存储容量大</li><li>支持强大的内置函数</li></ul><h4 id="Ⅱ、MySQL版本"><a href="#Ⅱ、MySQL版本" class="headerlink" title="Ⅱ、MySQL版本"></a>Ⅱ、MySQL版本</h4><p>本实验采用 MySQL 8.0版本</p><p>安装地址：<a href="https://dev.mysql.com/downloads/installer/">https://dev.mysql.com/downloads/installer/</a></p><p>安装包：</p><p><img src="https://s2.loli.net/2022/07/26/nm5XEajiLsUZGFK.png" alt="image-20220628001737326"></p><h3 id="2、Unity"><a href="#2、Unity" class="headerlink" title="2、Unity"></a>2、Unity</h3><p>Unity 是实时3D互动内容创作和运营平台  。包括游戏开发、美术、建筑、汽车设计、影视在内的所有创作者，借助Unity将创意变成现实。Unity平台提供一整套完善的软件解决方案，可用于创作、运营和变现任何实时互动的2D和3D内容，支持平台包括手机、平板电脑、PC、游戏主机、增强现实和虚拟现实设备。</p><p>本实验采用Unity制作GUI界面 ，全部代码均在Unity中通过C#编写，</p><p>所用Unity编辑器的版本为  2021.2.7f1c1，渲染管线为 Built-in 渲染管线，新建项目类型为普通3D项目，所以代码编辑器为 Visual Studio 2019。</p><h3 id="3、相关参考资料"><a href="#3、相关参考资料" class="headerlink" title="3、相关参考资料"></a>3、相关参考资料</h3><p>MySQL的安装：<a href="https://blog.csdn.net/qq_59636442/article/details/123058454">https://blog.csdn.net/qq_59636442/article/details/123058454</a></p><p>PHP与MySQL的连接：<a href="http://c.biancheng.net/view/7668.html">http://c.biancheng.net/view/7668.html</a></p><p>Unity连接MySQL：</p><p><a href="https://blog.csdn.net/Caijingxiang/article/details/107325645">https://blog.csdn.net/Caijingxiang/article/details/107325645</a></p><p><a href="https://zhuanlan.zhihu.com/p/508391104">https://zhuanlan.zhihu.com/p/508391104</a></p><h2 id="三、数据部分"><a href="#三、数据部分" class="headerlink" title="三、数据部分"></a><strong>三、数据部分</strong></h2><h4 id="1、数据来源"><a href="#1、数据来源" class="headerlink" title="1、数据来源"></a>1、数据来源</h4><p>本实验完成了一个书籍信息管理系统，其中书籍和作者信息为在豆瓣读书网页中爬取所得</p><p><strong>【方法】</strong></p><p>用python编写网络爬虫</p><h5 id="（1）设置url"><a href="#（1）设置url" class="headerlink" title="（1）设置url"></a>（1）设置url</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url = <span class="string">&quot;https://book.douban.com/subject/35635639&quot;</span></span><br></pre></td></tr></table></figure><p>后面的数字 35635639 为豆瓣数据库中对每个书籍的编号</p><p>通过改变数字来获取书籍信息</p><h5 id="（2）建立请求，获取源代码"><a href="#（2）建立请求，获取源代码" class="headerlink" title="（2）建立请求，获取源代码"></a>（2）建立请求，获取源代码</h5> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r = requests.get(url, headers=&#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0&#x27;</span>&#125;)</span><br></pre></td></tr></table></figure><p>注意：必须在 url 后面加上 headers ，否则请求会被拒绝。</p><h5 id="（3）根据网页源代码，构建查匹配对应数据所需的正则表达式"><a href="#（3）根据网页源代码，构建查匹配对应数据所需的正则表达式" class="headerlink" title="（3）根据网页源代码，构建查匹配对应数据所需的正则表达式"></a>（3）根据网页源代码，构建查匹配对应数据所需的正则表达式</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pattern1 = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;meta name=&quot;keywords&quot; content=&quot;(.*?)&quot;&gt;&#x27;</span>) <span class="comment"># 基本信息</span></span><br><span class="line">pattern2 = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;strong class=&quot;ll rating_num &quot; property=&quot;v:average&quot;&gt; (.*?) &lt;/strong&gt;&#x27;</span>) <span class="comment"># 豆瓣评分</span></span><br><span class="line">pettern3 = re.<span class="built_in">compile</span>(<span class="string">&#x27;&lt;a class=&quot;&quot; href=&quot;/search/%E9%87%91%E5%86%89&quot;&gt;(.*?)&lt;/a&gt;&#x27;</span>) <span class="comment"># 译者，有的书此处为空</span></span><br></pre></td></tr></table></figure><h5 id="（4）进行匹配查询"><a href="#（4）进行匹配查询" class="headerlink" title="（4）进行匹配查询"></a>（4）进行匹配查询</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">data = re.findall(pattern1, r.text)</span><br><span class="line">star = re.findall(pattern2, r.text)</span><br><span class="line">translate = re.findall(pettern3, r.text)</span><br></pre></td></tr></table></figure><h5 id="（5）字符串连接"><a href="#（5）字符串连接" class="headerlink" title="（5）字符串连接"></a>（5）字符串连接</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;insert into books values (&quot;&#x27;</span> + s[<span class="number">0</span>] + <span class="string">&#x27;&quot;,&quot;&#x27;</span> + s[<span class="number">1</span>] + <span class="string">&#x27;&quot;,&quot;&#x27;</span> + s[<span class="number">2</span>] + <span class="string">&#x27;&quot;,&quot;&#x27;</span> + s[<span class="number">3</span>] + <span class="string">&#x27;&quot;,&#x27;</span> + <span class="string">&#x27; &quot;无&quot; ,&quot;&#x27;</span> + star[</span><br><span class="line">    <span class="number">0</span>] + <span class="string">&#x27;&quot; , &quot;未借出&quot;);&#x27;</span></span><br></pre></td></tr></table></figure><p>将上述爬取到的信息连接起来，形成一条具有插入功能的MySQL语句，方便后续运行。</p><p><strong>【输出案例】</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into books values (<span class="string">&quot;法治的细节&quot;</span>,<span class="string">&quot;罗翔&quot;</span>,<span class="string">&quot;云南人民出版社&quot;</span>,<span class="string">&quot;2021-11&quot;</span>, <span class="string">&quot;无&quot;</span> ,<span class="string">&quot;8.4&quot;</span> , <span class="string">&quot;未借出&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>【一些问题】</strong></p><p>豆瓣对书籍及作者信息有时收集的并不完全，导致爬取到的数据很少有能用的。</p><p>下图是一个完整的书籍信息，书籍编号为 35635639</p><img src="https://s2.loli.net/2022/07/26/tCewRjis3lNJYcT.png" alt="image-20220628003009895" style="zoom: 67%;" /><p>下图书籍缺少豆瓣评分信息，书籍编号为 35635619</p><img src="https://s2.loli.net/2022/07/26/UIAQMxNSLcoOuYi.png" alt="image-20220628003116521" style="zoom:67%;" /><p><strong>【解决方法】</strong></p><p>在大批量爬取数据后，手动删除无用信息，留下具有完整信息的书籍，将其写入到数据库中。</p><h4 id="2、详细数据"><a href="#2、详细数据" class="headerlink" title="2、详细数据"></a>2、详细数据</h4><h5 id="（1）书籍信息"><a href="#（1）书籍信息" class="headerlink" title="（1）书籍信息"></a>（1）书籍信息</h5><p>书籍信息表 books，具有以下7个属性</p><ul><li>书名 （主属性）</li><li>作者</li><li>出版社</li><li>出版时间</li><li>译者 （可无）</li><li>豆瓣评分</li><li>借阅状态</li></ul><p>使用如下sql语句创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> books</span><br><span class="line">(</span><br><span class="line">    bookname <span class="type">CHAR</span>(<span class="number">40</span>) <span class="keyword">Primary</span> key,</span><br><span class="line">    author <span class="type">CHAR</span>(<span class="number">40</span>) ,</span><br><span class="line">    producer <span class="type">CHAR</span>(<span class="number">40</span>),</span><br><span class="line">    producetime <span class="type">CHAR</span>(<span class="number">40</span>),</span><br><span class="line">    translater <span class="type">CHAR</span>(<span class="number">40</span>) ,</span><br><span class="line">    star <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">    borrowstate <span class="type">CHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">foreign</span> key(auther) <span class="keyword">references</span> authors(authorname)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在MySQL中存储如下 （仅部分数据）</p><p><img src="https://s2.loli.net/2022/07/26/SxlD234weuskIJT.png" alt="image-20220628003930333"></p><h5 id="（2）作者信息"><a href="#（2）作者信息" class="headerlink" title="（2）作者信息"></a>（2）作者信息</h5><p>作者信息表 authors ，具有如下 5个属性</p><ul><li>作者姓名</li><li>作者性别</li><li>出生日期</li><li>出生地</li><li>国籍</li></ul><p>使用如下 sql 语句创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> authers</span><br><span class="line">(</span><br><span class="line">    auther <span class="type">CHAR</span>(<span class="number">40</span>) <span class="keyword">Primary</span> key,</span><br><span class="line">    sex <span class="type">CHAR</span>(<span class="number">40</span>) ,</span><br><span class="line">    birthtime <span class="type">CHAR</span>(<span class="number">40</span>),</span><br><span class="line">    birtharea <span class="type">CHAR</span>(<span class="number">40</span>),</span><br><span class="line">    country <span class="type">CHAR</span>(<span class="number">10</span>) ,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在MySQL中存储如下 （仅部分数据）</p><p><img src="https://s2.loli.net/2022/07/26/GN9cS2QsjagKzZH.png" alt="image-20220628004555717"></p><h5 id="（3）学生信息"><a href="#（3）学生信息" class="headerlink" title="（3）学生信息"></a>（3）学生信息</h5><p>学生信息表 students ，具有如下 5个属性</p><ul><li>学生姓名</li><li>学号</li><li>性别</li><li>系别</li><li>借阅书籍</li></ul><p>使用如下 sql 语句创建</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> students</span><br><span class="line">(</span><br><span class="line">    name <span class="type">CHAR</span>(<span class="number">20</span>),</span><br><span class="line">    Sno <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">    Sex <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">    Sdept <span class="type">CHAR</span>(<span class="number">10</span>),</span><br><span class="line">    book <span class="type">CHAR</span>(<span class="number">20</span>),</span><br><span class="line">    <span class="keyword">FOREIGN</span> KEY (book) <span class="keyword">REFERENCES</span> books(bookname),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在MySQL中存储如下 （仅部分数据）</p><p><img src="https://s2.loli.net/2022/07/26/t39EHslpx4yQm1Z.png" alt="image-20220628004942659"></p><h4 id="3、数据-E-R-图"><a href="#3、数据-E-R-图" class="headerlink" title="3、数据 E-R 图"></a>3、数据 E-R 图</h4><p><img src="https://s2.loli.net/2022/07/26/v32aFtNdSg7wZxf.png" alt="image-20220628010920001"></p><h2 id="四、具体实验流程"><a href="#四、具体实验流程" class="headerlink" title="四、具体实验流程"></a><strong>四、具体实验流程</strong></h2><h3 id="1、建立-Unity-与-MySQL-之间的连接"><a href="#1、建立-Unity-与-MySQL-之间的连接" class="headerlink" title="1、建立 Unity 与 MySQL 之间的连接"></a>1、建立 Unity 与 MySQL 之间的连接</h3><p>创建 C# 脚本 SqlAccess.cs ，完整代码如下，具体结束见注释</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> MySql.Data.MySqlClient;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SqlAccess</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MySqlConnection dbConnection;</span><br><span class="line">    <span class="comment">//如果只是在本地的话，写localhost就可以。</span></span><br><span class="line">    <span class="comment">// static string host = &quot;localhost&quot;;  </span></span><br><span class="line">    <span class="comment">//如果是局域网，那么写上本机的局域网IP</span></span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> host = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> port = <span class="string">&quot;3306&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> username = <span class="string">&quot;root&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> pwd = <span class="string">&quot;HUNXIGUILAI2019&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">string</span> database = <span class="string">&quot;ekkodb&quot;</span>;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SqlAccess</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        OpenSql();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 连接数据库</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">OpenSql</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> connectionString = <span class="built_in">string</span>.Format(<span class="string">&quot;server = &#123;0&#125;;port=&#123;1&#125;;database = &#123;2&#125;;user = &#123;3&#125;;password = &#123;4&#125;;charset=utf8&quot;</span>, host, port, database, username, pwd);</span><br><span class="line">        Debug.Log(<span class="string">&quot;connectionString:&quot;</span>+ connectionString);</span><br><span class="line">        dbConnection = <span class="keyword">new</span> MySqlConnection(connectionString);</span><br><span class="line">        dbConnection.Open();</span><br><span class="line">        Debug.Log(<span class="string">&quot;建立连接&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;服务器连接失败,请重新检查是否打开MySql服务。&quot;</span> + e.Message.ToString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 关闭数据库连接</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Close</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (dbConnection != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        dbConnection.Close();</span><br><span class="line">        dbConnection.Dispose();</span><br><span class="line">        dbConnection = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSet <span class="title">Additem</span>(<span class="params"><span class="built_in">string</span> tablename,<span class="built_in">string</span>[] datavalues</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">StringBuilder query = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">query.Append(<span class="string">&quot;INSERT into &quot;</span>);</span><br><span class="line">query.Append(tablename);</span><br><span class="line">query.Append(<span class="string">&quot; VALUES (&quot;</span>);</span><br><span class="line">query.Append(<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">query.Append(datavalues[<span class="number">0</span>]);</span><br><span class="line">query.Append(<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i = <span class="number">1</span>;i &lt;datavalues.Length;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 判断类型</span></span><br><span class="line">query.Append(<span class="string">&quot;,&#x27;&quot;</span>);</span><br><span class="line">query.Append(datavalues[i]);</span><br><span class="line">query.Append(<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">query.Append(<span class="string">&quot;);&quot;</span>);</span><br><span class="line">Debug.Log(<span class="string">&quot;添加数据:&quot;</span> + query.ToString());</span><br><span class="line">    <span class="keyword">return</span> ExecuteQuery(query.ToString());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSet <span class="title">SelectWhere</span>(<span class="params"><span class="built_in">string</span> tableName, <span class="built_in">string</span>[] items, <span class="built_in">string</span> bookname</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    StringBuilder query = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    query.Append(<span class="string">&quot;SELECT &quot;</span>);</span><br><span class="line">    query.Append(items[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; items.Length; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        query.Append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">        query.Append(items[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    query.Append(<span class="string">&quot; FROM &quot;</span>);</span><br><span class="line">    query.Append(tableName);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( bookname != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">query.Append(<span class="string">&quot; WHERE &quot;</span>);</span><br><span class="line">query.Append(<span class="string">&quot;bookname = &quot;</span>);</span><br><span class="line">query.Append(<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">query.Append(bookname);</span><br><span class="line">query.Append(<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">query.Append(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    Debug.Log(<span class="string">&quot;查询数据:&quot;</span> + query.ToString());</span><br><span class="line">    <span class="keyword">return</span> ExecuteQuery(query.ToString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除操作</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> DataSet <span class="title">Delete</span>(<span class="params"><span class="built_in">string</span> tablename,<span class="built_in">string</span> bookname</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">// delete from books where bookname = &quot;浮木&quot;;</span></span><br><span class="line">StringBuilder query = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">query.Append(<span class="string">&quot;DELETE FROM &quot;</span>);</span><br><span class="line">query.Append(tablename);</span><br><span class="line">query.Append(<span class="string">&quot; WHERE bookname = &quot;</span>);</span><br><span class="line">query.Append(<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">query.Append(bookname);</span><br><span class="line">query.Append(<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">query.Append(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">Debug.Log(<span class="string">&quot;删除数据:&quot;</span> + query.ToString());</span><br><span class="line"><span class="keyword">return</span> ExecuteQuery(query.ToString());</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行 Sql 语句</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSet <span class="title">ExecuteQuery</span>(<span class="params"><span class="built_in">string</span> sqlString</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (dbConnection.State == ConnectionState.Open)</span><br><span class="line">    &#123;</span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            MySqlDataAdapter da = <span class="keyword">new</span> MySqlDataAdapter(sqlString, dbConnection);</span><br><span class="line">            da.Fill(ds);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ee)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;SQL:&quot;</span> + sqlString + <span class="string">&quot;/n&quot;</span> + ee.Message.ToString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span></span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="【踩坑记录】"><a href="#【踩坑记录】" class="headerlink" title="【踩坑记录】"></a>【踩坑记录】</h4><h5 id="1、连接问题"><a href="#1、连接问题" class="headerlink" title="1、连接问题"></a>1、连接问题</h5><p><img src="https://s2.loli.net/2022/07/26/FwWlIqbLJcP9Hte.png" alt="image-20220606171815558"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception: 服务器连接失败，请重新检查是否打开MySql服务。The given key <span class="string">&#x27;utf8mb4&#x27;</span> was <span class="keyword">not</span> present <span class="keyword">in</span> the dictionary.</span><br></pre></td></tr></table></figure><p>解决办法：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在string末尾添加 “charset=utf8”</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> connectionString = <span class="built_in">string</span>.Format(<span class="string">&quot;server = &#123;0&#125;;port=&#123;1&#125;;database = &#123;2&#125;;user = &#123;3&#125;;password = &#123;4&#125;;charset=utf8&quot;</span>, host, port, database, username, pwd);</span><br></pre></td></tr></table></figure><h5 id="2、查询问题"><a href="#2、查询问题" class="headerlink" title="2、查询问题"></a>2、查询问题</h5><h5 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception: SQL:<span class="keyword">select</span> cno, cname, cpno, ccredit <span class="keyword">from</span> c/nThe given key <span class="string">&#x27;utf8mb4&#x27;</span> was <span class="keyword">not</span> present <span class="keyword">in</span> the dictionary.</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/07/26/iu8BYPfjsFJwSlr.png" alt="image-20220606171952042"></p><p><strong>主要原因：</strong></p><p>MySql.Data 的版本过低（此版本为5.2.7）</p><h5 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception: 服务器连接失败，请重新检查是否打开MySql服务。Authentication failed, see inner exception.</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/07/26/Be3Tst1KX5rLmER.png" alt="image-20220606172208966"></p><p><strong>主要原因：</strong></p><p>MySql.Data 的版本过高（此版本为6.9.9）</p><h5 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h5><p>以上问题都是由于 MySql.Data.dll  的版本问题导致的</p><p>我所用的Unity版本为 2021.2.7f1c1</p><p>不同的 MySql.Data.dll 的下载地址： <a href="https://downloads.mysql.com/archives/c-net/">https://downloads.mysql.com/archives/c-net/</a></p><p>经过多次实验</p><p><img src="https://s2.loli.net/2022/07/26/NhPbcVzuov37nQB.png" alt="image-20220606172506541"></p><p>找到的合适的 MySql.Data.dll  的版本为 6.1.6</p><p>成功建立连接并实现查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Cno, Cname, Cpno, Ccredit <span class="keyword">FROM</span> C</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/07/26/PXiT9d4qwNDhtRA.png" alt="image-20220606172751991"></p><img src="https://s2.loli.net/2022/07/26/TmGUED6y4pdlXa9.png" alt="image-20220606172726928" style="zoom:80%;" /><h3 id="2、登陆界面"><a href="#2、登陆界面" class="headerlink" title="2、登陆界面"></a>2、登陆界面</h3><h4 id="Ⅰ、界面绘制及功能介绍"><a href="#Ⅰ、界面绘制及功能介绍" class="headerlink" title="Ⅰ、界面绘制及功能介绍"></a>Ⅰ、界面绘制及功能介绍</h4><p><img src="https://s2.loli.net/2022/07/26/Agt9WSxaBYCMKU4.png" alt="image-20220628011720929"></p><p><em>用户名</em> 与 <em>密码</em>  为两个 Input Field 组件，可以获取用户输入</p><p>用户输入 正确的用户名和密码后可登入数据库，若用户名或密码错误，会出现警告</p><p><img src="https://s2.loli.net/2022/07/26/C5tlpr87dA9k1Zg.png" alt="image-20220628011958371"></p><h4 id="Ⅱ、功能实现"><a href="#Ⅱ、功能实现" class="headerlink" title="Ⅱ、功能实现"></a>Ⅱ、功能实现</h4><h5 id="（1）引入所需命名空间"><a href="#（1）引入所需命名空间" class="headerlink" title="（1）引入所需命名空间"></a>（1）引入所需命名空间</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br></pre></td></tr></table></figure><h5 id="（2）声明所需的各个变量"><a href="#（2）声明所需的各个变量" class="headerlink" title="（2）声明所需的各个变量"></a>（2）声明所需的各个变量</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject cuowu;</span><br><span class="line"><span class="keyword">public</span> InputField zhanghao;</span><br><span class="line"><span class="keyword">public</span> InputField mima;</span><br><span class="line"><span class="keyword">public</span> Button queding_btn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> GameObject maincanvas;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> zhanghaostr ;</span><br><span class="line"><span class="built_in">string</span> mimastr ;</span><br></pre></td></tr></table></figure><h5 id="（3）在启动时进行绑定与初始化设置"><a href="#（3）在启动时进行绑定与初始化设置" class="headerlink" title="（3）在启动时进行绑定与初始化设置"></a>（3）在启动时进行绑定与初始化设置</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    cuowu.SetActive(<span class="literal">false</span>);</span><br><span class="line">    maincanvas.SetActive(<span class="literal">false</span>);</span><br><span class="line">    queding_btn.onClick.AddListener(log);</span><br><span class="line">    mima.contentType = InputField.ContentType.Password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（4）按钮触发的登陆操作"><a href="#（4）按钮触发的登陆操作" class="headerlink" title="（4）按钮触发的登陆操作"></a>（4）按钮触发的登陆操作</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">log</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">string</span> myzh = zhanghao.text;</span><br><span class="line">    <span class="built_in">string</span> mymima = mima.text;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>( <span class="built_in">string</span>.Compare(zhanghaostr,myzh)== <span class="number">0</span> &amp;&amp; <span class="built_in">string</span>.Compare(mimastr,mymima) == <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        transform.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        maincanvas.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        cuowu.SetActive(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、主界面"><a href="#3、主界面" class="headerlink" title="3、主界面"></a>3、主界面</h3><h4 id="Ⅰ、界面绘制及功能介绍-1"><a href="#Ⅰ、界面绘制及功能介绍-1" class="headerlink" title="Ⅰ、界面绘制及功能介绍"></a>Ⅰ、界面绘制及功能介绍</h4><p><img src="https://s2.loli.net/2022/07/26/p4EaV8k2nXm1oQy.png" alt="image-20220628012514967"></p><p>主界面一共有四个按钮事件，通过点击各个按钮显示对应的界面，左上角 <strong>×</strong> 为关闭整个应用程序，在程序打包后生效。</p><h4 id="Ⅱ、功能实现-1"><a href="#Ⅱ、功能实现-1" class="headerlink" title="Ⅱ、功能实现"></a>Ⅱ、功能实现</h4><h5 id="（1）引入命名空间"><a href="#（1）引入命名空间" class="headerlink" title="（1）引入命名空间"></a>（1）引入命名空间</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">using</span> XCharts.Runtime;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br></pre></td></tr></table></figure><h5 id="（2）初始化所需的各个变量及组件"><a href="#（2）初始化所需的各个变量及组件" class="headerlink" title="（2）初始化所需的各个变量及组件"></a>（2）初始化所需的各个变量及组件</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Button sbtn;</span><br><span class="line"><span class="keyword">public</span> Button abtn;</span><br><span class="line"><span class="keyword">public</span> Button alterbtn;</span><br><span class="line"><span class="keyword">public</span> Button showbtn;</span><br><span class="line"><span class="keyword">public</span> Button quitbnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Canvas selcanva;</span><br><span class="line"><span class="keyword">public</span> Canvas addcanva;</span><br><span class="line"><span class="keyword">public</span> Canvas altercanva;</span><br><span class="line"><span class="keyword">public</span> Canvas showchartcanva;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> PieChart chart;</span><br><span class="line"><span class="keyword">public</span> BarChart barchart;</span><br><span class="line"><span class="keyword">private</span> Serie serie;</span><br><span class="line">ArrayList stars = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> GameObject tablecanvas;</span><br><span class="line"><span class="keyword">public</span> GameObject table_prefab;</span><br><span class="line"><span class="keyword">private</span> GameObject mytable;</span><br></pre></td></tr></table></figure><h5 id="（3）对按钮、Canvas等组件进行初始化及绑定操作"><a href="#（3）对按钮、Canvas等组件进行初始化及绑定操作" class="headerlink" title="（3）对按钮、Canvas等组件进行初始化及绑定操作"></a>（3）对按钮、Canvas等组件进行初始化及绑定操作</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    selcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    addcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    altercanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    showchartcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    sbtn.onClick.AddListener(showtable );</span><br><span class="line">    abtn.onClick.AddListener(<span class="built_in">delegate</span> &#123; showandclose(addcanva); &#125;);</span><br><span class="line">    alterbtn.onClick.AddListener(<span class="built_in">delegate</span> &#123; showandclose(altercanva); &#125;);</span><br><span class="line">    showbtn.onClick.AddListener(xiugai);</span><br><span class="line">    quitbnt.onClick.AddListener(tuchu);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（4）关闭-x2F-显示-功能"><a href="#（4）关闭-x2F-显示-功能" class="headerlink" title="（4）关闭&#x2F;显示 功能"></a>（4）关闭&#x2F;显示 功能</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showandclose</span>(<span class="params">Canvas thiscanva</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    selcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    addcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    altercanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    showchartcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    thiscanva.gameObject.SetActive(<span class="literal">true</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（5）退出应用程序"><a href="#（5）退出应用程序" class="headerlink" title="（5）退出应用程序"></a>（5）退出应用程序</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tuchu</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Application.Quit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（6）对第四部分的chart图表进行更新修改"><a href="#（6）对第四部分的chart图表进行更新修改" class="headerlink" title="（6）对第四部分的chart图表进行更新修改"></a>（6）对第四部分的chart图表进行更新修改</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">xiugai</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    selcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    addcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    altercanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    showchartcanva.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">    <span class="built_in">string</span>[] items = &#123; <span class="string">&quot;star&quot;</span> &#125;;</span><br><span class="line">    <span class="built_in">string</span> tablename = <span class="string">&quot;books&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> bookname = <span class="literal">null</span>;</span><br><span class="line">    DataSet ds = sql.SelectWhere(tablename, items, bookname);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ds != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        DataTable table = ds.Tables[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (DataRow row <span class="keyword">in</span> table.Rows)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (DataColumn column <span class="keyword">in</span> table.Columns)</span><br><span class="line">            &#123;</span><br><span class="line">                str += row[column];</span><br><span class="line">                <span class="built_in">float</span> num = <span class="built_in">float</span>.Parse(str);</span><br><span class="line">                <span class="keyword">if</span> (num &gt;= <span class="number">9.0f</span>)</span><br><span class="line">                    a++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (num &lt;= <span class="number">8.0f</span>)</span><br><span class="line">                    c++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    b++;</span><br><span class="line">                <span class="comment">//stars.Add(float.Parse(str));</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    chart.UpdateData(<span class="number">0</span>, <span class="number">0</span>, a);</span><br><span class="line">    chart.UpdateData(<span class="number">0</span>, <span class="number">1</span>, b);</span><br><span class="line">    chart.UpdateData(<span class="number">0</span>, <span class="number">2</span>, c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> yAxis = barchart.GetChartComponent&lt;YAxis&gt;();</span><br><span class="line">    yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">    barchart.RemoveData();</span><br><span class="line">    serie = barchart.AddSerie&lt;Bar&gt;(<span class="string">&quot;Star&quot;</span>);</span><br><span class="line"></span><br><span class="line">    barchart.AddXAxisData(<span class="string">&quot;小于8.0&quot;</span>);</span><br><span class="line">    barchart.AddData(<span class="number">0</span>, c);</span><br><span class="line">    barchart.AddXAxisData(<span class="string">&quot;8.0-9.0&quot;</span>);</span><br><span class="line">    barchart.AddData(<span class="number">0</span>, b);</span><br><span class="line">    barchart.AddXAxisData(<span class="string">&quot;大于9.0&quot;</span> );</span><br><span class="line">    barchart.AddData(<span class="number">0</span>, a);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（7）通过预制体的不断删除实例化来更新"><a href="#（7）通过预制体的不断删除实例化来更新" class="headerlink" title="（7）通过预制体的不断删除实例化来更新"></a>（7）通过预制体的不断删除实例化来更新</h5><p>通过调用此函数解决了更新脚本只执行一次的bug</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showtable</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Destroy(tablecanvas.transform.GetChild(<span class="number">0</span>).gameObject);</span><br><span class="line">    mytable = Instantiate(table_prefab);</span><br><span class="line">    mytable.transform.SetParent(tablecanvas.transform, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    selcanva.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">    addcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    altercanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    showchartcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、选择查看界面"><a href="#4、选择查看界面" class="headerlink" title="4、选择查看界面"></a>4、选择查看界面</h3><h4 id="Ⅰ、界面绘制及功能介绍-2"><a href="#Ⅰ、界面绘制及功能介绍-2" class="headerlink" title="Ⅰ、界面绘制及功能介绍"></a>Ⅰ、界面绘制及功能介绍</h4><p><img src="https://s2.loli.net/2022/07/26/7aE3XNgDLSvyVP1.png" alt="image-20220628013418735"></p><p>此处程序尚未执行，表中全部为空</p><p><strong>【运行程序】</strong></p><p>点击 “书籍信息表”</p><p><img src="https://s2.loli.net/2022/07/26/WzFGOuXkn6Lsih4.png" alt="image-20220628013524407"></p><p>点击 “作者信息表”</p><p><img src="https://s2.loli.net/2022/07/26/jmQFwqgiu4NtbU3.png" alt="image-20220628013558654"></p><p>点击 “学生信息表”</p><p><img src="https://s2.loli.net/2022/07/26/glwCxHP9SfQuZqr.png" alt="image-20220628013619545"></p><p>此外，表中增加了排序功能</p><p>点击 “豆瓣评分” 表头，可以根据豆瓣评分高低进行升序排序</p><p><img src="https://s2.loli.net/2022/07/26/XrmahHi8VN21bDz.png" alt="image-20220628013745939"></p><p>点击 “豆瓣评分” 表头，可以根据豆瓣评分高低进行升序排序</p><p><img src="https://s2.loli.net/2022/07/26/IQ7rthGkeaWYU2o.png" alt="image-20220628013823061"></p><h4 id="Ⅱ、功能实现-2"><a href="#Ⅱ、功能实现-2" class="headerlink" title="Ⅱ、功能实现"></a>Ⅱ、功能实现</h4><h5 id="创建-Select-cs-脚本"><a href="#创建-Select-cs-脚本" class="headerlink" title="创建 Select.cs 脚本"></a>创建 Select.cs 脚本</h5><h6 id="（1）引入命名空间-1"><a href="#（1）引入命名空间-1" class="headerlink" title="（1）引入命名空间"></a>（1）引入命名空间</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br></pre></td></tr></table></figure><h6 id="（2）初始化变量及组件"><a href="#（2）初始化变量及组件" class="headerlink" title="（2）初始化变量及组件"></a>（2）初始化变量及组件</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Button shubtn;</span><br><span class="line"><span class="keyword">public</span> Button autherbtn;</span><br><span class="line"><span class="keyword">public</span> Button studentbtn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> GameObject shutable;</span><br><span class="line"><span class="keyword">public</span> GameObject authertable;</span><br><span class="line"><span class="keyword">public</span> GameObject studenttable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> GameObject tablecanvas;</span><br><span class="line"><span class="keyword">public</span> GameObject tablecanvas1;</span><br><span class="line"><span class="keyword">public</span> GameObject table_prefab;</span><br><span class="line"><span class="keyword">public</span> GameObject table_prefab1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> GameObject mytable;</span><br><span class="line"><span class="keyword">private</span> GameObject mytable1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> GameObject tishi;</span><br></pre></td></tr></table></figure><h6 id="（3）变量初始化及按钮绑定"><a href="#（3）变量初始化及按钮绑定" class="headerlink" title="（3）变量初始化及按钮绑定"></a>（3）变量初始化及按钮绑定</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    shubtn.onClick.AddListener(showshu);</span><br><span class="line">    autherbtn.onClick.AddListener(showa);</span><br><span class="line">    studentbtn.onClick.AddListener(shows);      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="（4）为各个按钮分配功能"><a href="#（4）为各个按钮分配功能" class="headerlink" title="（4）为各个按钮分配功能"></a>（4）为各个按钮分配功能</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showshu</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    shutable.SetActive(<span class="literal">true</span>);</span><br><span class="line">    authertable.SetActive(<span class="literal">false</span>);</span><br><span class="line">    studenttable.SetActive(<span class="literal">false</span>);</span><br><span class="line">    tishi.SetActive(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showa</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Destroy(tablecanvas.transform.GetChild(<span class="number">0</span>).gameObject);</span><br><span class="line">    mytable = Instantiate(table_prefab);</span><br><span class="line">    mytable.transform.SetParent(tablecanvas.transform, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">    shutable.SetActive(<span class="literal">false</span>);</span><br><span class="line">    studenttable.SetActive(<span class="literal">false</span>);</span><br><span class="line">    authertable.SetActive(<span class="literal">true</span>);</span><br><span class="line">    tishi.SetActive(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shows</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Destroy(tablecanvas1.transform.GetChild(<span class="number">0</span>).gameObject);</span><br><span class="line">    mytable1 = Instantiate(table_prefab1);</span><br><span class="line">    mytable1.transform.SetParent(tablecanvas1.transform, <span class="literal">false</span>);</span><br><span class="line">    mytable1.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    shutable.SetActive(<span class="literal">false</span>);</span><br><span class="line">    authertable.SetActive(<span class="literal">false</span>);</span><br><span class="line">    studenttable.SetActive(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="为书籍信息表创建-example-cs-脚本"><a href="#为书籍信息表创建-example-cs-脚本" class="headerlink" title="为书籍信息表创建 example.cs 脚本"></a>为书籍信息表创建 example.cs 脚本</h5><h6 id="（1）引入命名空间-2"><a href="#（1）引入命名空间-2" class="headerlink" title="（1）引入命名空间"></a>（1）引入命名空间</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">using</span> WDT;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System;</span><br></pre></td></tr></table></figure><h6 id="（2）初始化变量及组件-1"><a href="#（2）初始化变量及组件-1" class="headerlink" title="（2）初始化变量及组件"></a>（2）初始化变量及组件</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> WDataTable dataTable;</span><br><span class="line"><span class="keyword">private</span> List&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; m_datas = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">private</span> List&lt;WColumnDef&gt; m_columnDefs = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> m_tempSelectIndex = <span class="number">-1</span>;</span><br><span class="line">ArrayList stars = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="built_in">int</span> row_n;</span><br></pre></td></tr></table></figure><h6 id="（3）对表格进行赋值初始化"><a href="#（3）对表格进行赋值初始化" class="headerlink" title="（3）对表格进行赋值初始化"></a>（3）对表格进行赋值初始化</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">        <span class="built_in">string</span>[] items = &#123; <span class="string">&quot;*&quot;</span> &#125;;</span><br><span class="line">        <span class="built_in">string</span> tablename = <span class="string">&quot;books&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> bookname = <span class="literal">null</span>;</span><br><span class="line">        DataSet ds = sql.SelectWhere(tablename, items, bookname);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ds != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DataTable table = ds.Tables[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">foreach</span> (DataRow row <span class="keyword">in</span> table.Rows)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// string str = &quot;&quot;;</span></span><br><span class="line">                <span class="keyword">foreach</span> (DataColumn column <span class="keyword">in</span> table.Columns)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    str += row[column];</span><br><span class="line">                    stars.Add(str);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// Debug.Log(str + &quot;ee&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Debug.Log(<span class="string">&quot;changdu:&quot;</span> + stars.Count);</span><br><span class="line">        row_n = stars.Count / <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//table.onClick.AddListener(gengxin);</span></span><br><span class="line"></span><br><span class="line">        m_datas = <span class="keyword">new</span> List&lt;IList&lt;<span class="built_in">object</span>&gt;&gt;();</span><br><span class="line">        <span class="comment">// name is necessary in columnDefs</span></span><br><span class="line">        m_columnDefs = <span class="keyword">new</span> List&lt;WColumnDef&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;书名&quot;</span>,width = <span class="string">&quot;15%&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;作者名&quot;</span>,width = <span class="string">&quot;20%&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;出版社&quot;</span>,width = <span class="string">&quot;19%&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;出版时间&quot;</span>,width = <span class="string">&quot;12%&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;译者&quot;</span>,width = <span class="string">&quot;11%&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;豆瓣评分&quot;</span>,&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;借阅状态&quot;</span>,&#125;,</span><br><span class="line">            <span class="comment">//new WColumnDef() &#123;name = &quot;译者&quot;, width = &quot;50%&quot;, disableSort = true&#125;</span></span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; row_n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            m_datas.Add(GetRandomData(i));</span><br><span class="line">        &#125;</span><br><span class="line">        dataTable.msgHandle += HandleTableEvent;</span><br><span class="line">        dataTable.InitDataTable(m_datas, m_columnDefs);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h6 id="（4）实现表头排序功能的引入、实现表头界面颜色的更改"><a href="#（4）实现表头排序功能的引入、实现表头界面颜色的更改" class="headerlink" title="（4）实现表头排序功能的引入、实现表头界面颜色的更改"></a>（4）实现表头排序功能的引入、实现表头界面颜色的更改</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleTableEvent</span>(<span class="params">WEventType messageType, <span class="keyword">params</span> <span class="built_in">object</span>[] args</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (messageType == WEventType.INIT_ELEMENT)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> rowIndex = (<span class="built_in">int</span>) args[<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">int</span> columnIndex = (<span class="built_in">int</span>) args[<span class="number">1</span>];</span><br><span class="line">        WElement element = args[<span class="number">2</span>] <span class="keyword">as</span> WElement;</span><br><span class="line">        <span class="keyword">if</span> (element == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        Text tText = element.GetComponent&lt;Text&gt;();</span><br><span class="line">        <span class="keyword">if</span> (tText == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        tText.color = Color.black;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (messageType == WEventType.SELECT_ROW)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> rowIndex = (<span class="built_in">int</span>) args[<span class="number">0</span>];</span><br><span class="line">        m_tempSelectIndex = rowIndex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="（5）为表项内容赋值"><a href="#（5）为表项内容赋值" class="headerlink" title="（5）为表项内容赋值"></a>（5）为表项内容赋值</h6><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> List&lt;<span class="built_in">object</span>&gt; <span class="title">GetRandomData</span>(<span class="params"><span class="built_in">int</span> i </span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="comment">// &quot;浮木&quot;,</span></span><br><span class="line">       <span class="comment">// &quot;杨本芬&quot;,</span></span><br><span class="line">       <span class="comment">//&quot;四川人民出版社&quot;,</span></span><br><span class="line">       <span class="comment">// &quot;2018-12&quot;,</span></span><br><span class="line">       <span class="comment">// &quot;无&quot;,</span></span><br><span class="line">       <span class="comment">// 8.0 + i,</span></span><br><span class="line">       <span class="comment">// &quot;未借出&quot;</span></span><br><span class="line">       stars[i * <span class="number">7</span>].ToString(),</span><br><span class="line">       stars[i * <span class="number">7</span> + <span class="number">1</span>].ToString(),</span><br><span class="line">       stars[i * <span class="number">7</span> + <span class="number">2</span>].ToString(),</span><br><span class="line">       stars[i * <span class="number">7</span> + <span class="number">3</span>].ToString(),</span><br><span class="line">       stars[i * <span class="number">7</span> + <span class="number">4</span>].ToString(),</span><br><span class="line">       stars[i * <span class="number">7</span> + <span class="number">5</span>].ToString(),</span><br><span class="line">       stars[i * <span class="number">7</span> + <span class="number">6</span>].ToString()</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，创建 Aexample.cs 为 “作者信息表” 进行创建及更新</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">using</span> WDT;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Aexample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> WDataTable dataTable;</span><br><span class="line">    <span class="keyword">private</span> List&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; m_datas = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> List&lt;WColumnDef&gt; m_columnDefs = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> m_tempSelectIndex = <span class="number">-1</span>;</span><br><span class="line">    ArrayList stars = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    <span class="built_in">int</span> row_n;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">        <span class="built_in">string</span>[] items = &#123; <span class="string">&quot;*&quot;</span> &#125;;</span><br><span class="line">        <span class="built_in">string</span> tablename = <span class="string">&quot;auther&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> bookname = <span class="literal">null</span>;</span><br><span class="line">        DataSet ds = sql.SelectWhere(tablename, items, bookname);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ds != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DataTable table = ds.Tables[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">foreach</span> (DataRow row <span class="keyword">in</span> table.Rows)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// string str = &quot;&quot;;</span></span><br><span class="line">                <span class="keyword">foreach</span> (DataColumn column <span class="keyword">in</span> table.Columns)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    str += row[column];</span><br><span class="line">                    stars.Add(str);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// Debug.Log(str + &quot;ee&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Debug.Log(<span class="string">&quot;changdu:&quot;</span> + stars.Count);</span><br><span class="line">        row_n = stars.Count / <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//table.onClick.AddListener(gengxin);</span></span><br><span class="line"></span><br><span class="line">        m_datas = <span class="keyword">new</span> List&lt;IList&lt;<span class="built_in">object</span>&gt;&gt;();</span><br><span class="line">        <span class="comment">// name is necessary in columnDefs</span></span><br><span class="line">        m_columnDefs = <span class="keyword">new</span> List&lt;WColumnDef&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;作者名&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;性别&quot;</span>,width = <span class="string">&quot;100&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;出生时间&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;出生地&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;国家&quot;</span>,width = <span class="string">&quot;200&quot;</span>&#125;,</span><br><span class="line">            <span class="comment">//new WColumnDef() &#123;name = &quot;译者&quot;, width = &quot;50%&quot;, disableSort = true&#125;</span></span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; row_n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            m_datas.Add(GetRandomData(i));</span><br><span class="line">        &#125;</span><br><span class="line">        dataTable.msgHandle += HandleTableEvent;</span><br><span class="line">        dataTable.InitDataTable(m_datas, m_columnDefs);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleTableEvent</span>(<span class="params">WEventType messageType, <span class="keyword">params</span> <span class="built_in">object</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (messageType == WEventType.INIT_ELEMENT)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> rowIndex = (<span class="built_in">int</span>)args[<span class="number">0</span>];</span><br><span class="line">            <span class="built_in">int</span> columnIndex = (<span class="built_in">int</span>)args[<span class="number">1</span>];</span><br><span class="line">            WElement element = args[<span class="number">2</span>] <span class="keyword">as</span> WElement;</span><br><span class="line">            <span class="keyword">if</span> (element == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            Text tText = element.GetComponent&lt;Text&gt;();</span><br><span class="line">            <span class="keyword">if</span> (tText == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            tText.color = Color.black;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (messageType == WEventType.SELECT_ROW)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> rowIndex = (<span class="built_in">int</span>)args[<span class="number">0</span>];</span><br><span class="line">            m_tempSelectIndex = rowIndex;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;<span class="built_in">object</span>&gt; <span class="title">GetRandomData</span>(<span class="params"><span class="built_in">int</span> i</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;</span><br><span class="line">        &#123;</span><br><span class="line">           stars[i * <span class="number">5</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">1</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">2</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">3</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">4</span>].ToString(),</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，创建 Bexample.cs 为 “学生信息表” 进行创建及更新</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">using</span> WDT;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bexample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> WDataTable dataTable;</span><br><span class="line">    <span class="keyword">private</span> List&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; m_datas = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> List&lt;WColumnDef&gt; m_columnDefs = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> m_tempSelectIndex = <span class="number">-1</span>;</span><br><span class="line">    ArrayList stars = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    <span class="built_in">int</span> row_n;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">        <span class="built_in">string</span>[] items = &#123; <span class="string">&quot;*&quot;</span> &#125;;</span><br><span class="line">        <span class="built_in">string</span> tablename = <span class="string">&quot;student&quot;</span>;</span><br><span class="line">        <span class="built_in">string</span> bookname = <span class="literal">null</span>;</span><br><span class="line">        DataSet ds = sql.SelectWhere(tablename, items, bookname);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ds != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            DataTable table = ds.Tables[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">foreach</span> (DataRow row <span class="keyword">in</span> table.Rows)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// string str = &quot;&quot;;</span></span><br><span class="line">                <span class="keyword">foreach</span> (DataColumn column <span class="keyword">in</span> table.Columns)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    str += row[column];</span><br><span class="line">                    stars.Add(str);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// Debug.Log(str + &quot;ee&quot;);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Debug.Log(<span class="string">&quot;changdu:&quot;</span> + stars.Count);</span><br><span class="line">        row_n = stars.Count / <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//table.onClick.AddListener(gengxin);</span></span><br><span class="line"></span><br><span class="line">        m_datas = <span class="keyword">new</span> List&lt;IList&lt;<span class="built_in">object</span>&gt;&gt;();</span><br><span class="line">        <span class="comment">// name is necessary in columnDefs</span></span><br><span class="line">        m_columnDefs = <span class="keyword">new</span> List&lt;WColumnDef&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;姓名&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;学号&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;性别&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;院系&quot;</span>&#125;,</span><br><span class="line">            <span class="keyword">new</span> WColumnDef() &#123;name = <span class="string">&quot;借阅书籍&quot;</span>&#125;,</span><br><span class="line">            <span class="comment">//new WColumnDef() &#123;name = &quot;译者&quot;, width = &quot;50%&quot;, disableSort = true&#125;</span></span><br><span class="line"></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; row_n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            m_datas.Add(GetRandomData(i));</span><br><span class="line">        &#125;</span><br><span class="line">        dataTable.msgHandle += HandleTableEvent;</span><br><span class="line">        dataTable.InitDataTable(m_datas, m_columnDefs);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HandleTableEvent</span>(<span class="params">WEventType messageType, <span class="keyword">params</span> <span class="built_in">object</span>[] args</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (messageType == WEventType.INIT_ELEMENT)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> rowIndex = (<span class="built_in">int</span>)args[<span class="number">0</span>];</span><br><span class="line">            <span class="built_in">int</span> columnIndex = (<span class="built_in">int</span>)args[<span class="number">1</span>];</span><br><span class="line">            WElement element = args[<span class="number">2</span>] <span class="keyword">as</span> WElement;</span><br><span class="line">            <span class="keyword">if</span> (element == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            Text tText = element.GetComponent&lt;Text&gt;();</span><br><span class="line">            <span class="keyword">if</span> (tText == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            tText.color = Color.black;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (messageType == WEventType.SELECT_ROW)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> rowIndex = (<span class="built_in">int</span>)args[<span class="number">0</span>];</span><br><span class="line">            m_tempSelectIndex = rowIndex;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;<span class="built_in">object</span>&gt; <span class="title">GetRandomData</span>(<span class="params"><span class="built_in">int</span> i</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> List&lt;<span class="built_in">object</span>&gt;</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">           stars[i * <span class="number">5</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">1</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">2</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">3</span>].ToString(),</span><br><span class="line">           stars[i * <span class="number">5</span> + <span class="number">4</span>].ToString(),</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>DataTable.cs 脚本实现对表格内容进行动态更新和排序功能</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Assertions;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WDT</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">enum</span> WEventType</span><br><span class="line">    &#123;</span><br><span class="line">        SELECT_ROW,</span><br><span class="line">        SELECT_COLUMN,</span><br><span class="line">        SORT_BY_COLUMN,</span><br><span class="line">        INIT_ELEMENT,</span><br><span class="line">        EVENT_COUNT,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WColumnDef</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> headPrefabName;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> elementPrefabName;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> width;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> disableSort;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">delegate</span> <span class="keyword">void</span> <span class="title">WMsgHandle</span>(<span class="params">WEventType messageType, <span class="keyword">params</span> <span class="built_in">object</span>[] args</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WDataTable</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RowElementInfo</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="built_in">int</span> rowIndex;</span><br><span class="line">            <span class="keyword">public</span> WDataTable bindDataTable;</span><br><span class="line">            <span class="keyword">public</span> IList&lt;WColumnDef&gt; columnsDefs;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">class</span> <span class="title">SortItem</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="title">SortItem</span>(<span class="params"><span class="built_in">int</span> indexIn, <span class="built_in">object</span> itemIn</span>)</span></span><br><span class="line">            &#123;</span><br><span class="line">                rowIndex = indexIn;</span><br><span class="line">                item = itemIn;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">readonly</span> <span class="built_in">int</span> rowIndex;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">readonly</span> <span class="built_in">object</span> item;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">HideInInspector</span>] <span class="keyword">public</span> WMsgHandle msgHandle;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> rowPrefab;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> defaultHeadPrefabName;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">string</span> defaultElementPrefabName;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> itemHeight;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> tableWidth;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">int</span> tableHeight;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> isUseSort = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">bool</span> isUseSelect = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="built_in">bool</span> m_init;</span><br><span class="line">        <span class="keyword">private</span> WHead m_head;</span><br><span class="line">        <span class="keyword">private</span> LoopVerticalScrollRect m_scrollRect;</span><br><span class="line">        <span class="keyword">private</span> RectTransform m_scrollRectTransform;</span><br><span class="line">        <span class="keyword">private</span> RectTransform m_scrollbarRectTransform;</span><br><span class="line">        <span class="keyword">private</span> IList&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; m_datas = <span class="keyword">new</span> List&lt;IList&lt;<span class="built_in">object</span>&gt;&gt;();</span><br><span class="line">        <span class="keyword">private</span> IList&lt;WColumnDef&gt; m_columnDefs = <span class="keyword">new</span> List&lt;WColumnDef&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> IList&lt;RowElementInfo&gt; m_rowInfos = <span class="keyword">new</span> List&lt;RowElementInfo&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> IList&lt;<span class="built_in">int</span>&gt; m_columnWidths = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;();</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">readonly</span> List&lt;SortItem&gt; m_sortItems = <span class="keyword">new</span> List&lt;SortItem&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> public</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> LoopVerticalScrollRect <span class="title">GetLoopScrollRect</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> m_scrollRect;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">float</span> <span class="title">GetPositionByNewSize</span>(<span class="params"><span class="built_in">float</span> oldPosition, <span class="built_in">int</span> oldCount, <span class="built_in">int</span> newCount</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">float</span> offset = oldPosition * (itemHeight * oldCount - tableHeight);</span><br><span class="line">            <span class="built_in">float</span> newPosition = offset / (itemHeight * newCount - tableHeight);</span><br><span class="line">            <span class="keyword">return</span> newPosition;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">float</span> <span class="title">GetPosition</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_scrollRect == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> m_scrollRect.verticalNormalizedPosition;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetPosition</span>(<span class="params"><span class="built_in">float</span> position</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_scrollRect == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            m_scrollRect.verticalNormalizedPosition = position;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Sorts the index of the by.</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;columnIndex&quot;&gt;</span>The index.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SortByIndex</span>(<span class="params"><span class="built_in">int</span> columnIndex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (columnIndex &lt; <span class="number">0</span> || columnIndex &gt;= m_columnDefs.Count)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (m_rowInfos.Count == <span class="number">0</span> || !(m_datas[<span class="number">0</span>][columnIndex] <span class="keyword">is</span> IComparable))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            m_sortItems.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m_datas.Count; i++)</span><br><span class="line">                m_sortItems.Add(<span class="keyword">new</span> SortItem(i, m_datas[i][columnIndex]));</span><br><span class="line"></span><br><span class="line">            m_sortItems.Sort((x, y) =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">var</span> cpX = x.item <span class="keyword">as</span> IComparable;</span><br><span class="line">                <span class="keyword">var</span> cpY = y.item <span class="keyword">as</span> IComparable;</span><br><span class="line">                <span class="keyword">if</span> (cpX == <span class="literal">null</span> || cpY == <span class="literal">null</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span> cpX.CompareTo(cpY);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m_sortItems.Count; i++)</span><br><span class="line">                m_rowInfos[i].rowIndex = m_sortItems[i].rowIndex;</span><br><span class="line"></span><br><span class="line">            UpdateByRowInfo();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (msgHandle != <span class="literal">null</span>)</span><br><span class="line">                msgHandle(WEventType.SORT_BY_COLUMN, columnIndex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> update data of the data table. need ensure right data</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;datas&quot;&gt;</span>The datas.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateData</span>(<span class="params">IList&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; datas</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (datas == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!m_init)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">&quot;not init data table&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            IList&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; tDatas = datas;</span><br><span class="line">            <span class="keyword">if</span> (!CheckInputData(tDatas, m_columnDefs))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!CheckConfig())</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            m_datas = datas;</span><br><span class="line">            m_rowInfos.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m_datas.Count; i++)</span><br><span class="line">                m_rowInfos.Add(<span class="keyword">new</span> RowElementInfo &#123;rowIndex = i, bindDataTable = <span class="keyword">this</span>, columnsDefs = m_columnDefs&#125;);</span><br><span class="line"></span><br><span class="line">            UpdateByRowInfo();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> Initializes the data table. need ensure right data</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;datas&quot;&gt;</span>The datas.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;columnDefs&quot;&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InitDataTable</span>(<span class="params">IList&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; datas, IList&lt;WColumnDef&gt; columnDefs</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!CheckInputData(datas, columnDefs))</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!CheckConfig())</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!m_init)</span><br><span class="line">                Init();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// copy</span></span><br><span class="line">            m_datas = datas;</span><br><span class="line">            m_columnDefs = columnDefs;</span><br><span class="line">            m_rowInfos.Clear();</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m_datas.Count; i++)</span><br><span class="line">                m_rowInfos.Add(<span class="keyword">new</span> RowElementInfo &#123;rowIndex = i, bindDataTable = <span class="keyword">this</span>, columnsDefs = m_columnDefs&#125;);</span><br><span class="line"></span><br><span class="line">            UpdateColumnWidths();</span><br><span class="line">            m_head.SetColumnInfo(m_columnDefs, <span class="keyword">this</span>);</span><br><span class="line">            m_scrollRect.prefabSource.prefabName = rowPrefab;</span><br><span class="line">            UpdateScrollRectSize();</span><br><span class="line">            UpdateByRowInfo();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> IList&lt;<span class="built_in">object</span>&gt; <span class="title">GetInfosByRowIndex</span>(<span class="params"><span class="built_in">int</span> rowIndex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (rowIndex &lt; <span class="number">0</span> || rowIndex &gt;= m_datas.Count)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> m_datas[rowIndex];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnClickRow</span>(<span class="params"><span class="built_in">int</span> rowIndex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;clicked rowIndex&quot;</span> + rowIndex);</span><br><span class="line">            <span class="keyword">if</span> (msgHandle != <span class="literal">null</span>)</span><br><span class="line">                msgHandle(WEventType.SELECT_ROW, rowIndex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnClickColumn</span>(<span class="params"><span class="built_in">int</span> columnIndex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isUseSort)</span><br><span class="line">                SortByIndex(columnIndex);</span><br><span class="line"></span><br><span class="line">            Debug.Log(<span class="string">&quot;clicked columnIndex &quot;</span> + columnIndex);</span><br><span class="line">            <span class="keyword">if</span> (msgHandle != <span class="literal">null</span>)</span><br><span class="line">                msgHandle(WEventType.SELECT_COLUMN, columnIndex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnClickButton</span>(<span class="params"><span class="built_in">int</span> rowIndex, <span class="built_in">int</span> columnIndex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;clicked button row &quot;</span> + rowIndex + <span class="string">&quot; columnIndex &quot;</span> + columnIndex);</span><br><span class="line">            <span class="keyword">if</span> (rowIndex == <span class="number">-1</span>)</span><br><span class="line">                OnClickColumn(columnIndex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnInitElement</span>(<span class="params"><span class="built_in">int</span> rowIndex, <span class="built_in">int</span> columnIndex, WElement element</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (msgHandle != <span class="literal">null</span>)</span><br><span class="line">                msgHandle(WEventType.INIT_ELEMENT, rowIndex, columnIndex, element);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">ContextMenu(<span class="string">&quot;UpdateSize&quot;</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpdateSize</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!m_init)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            UpdateColumnWidths();</span><br><span class="line">            m_head.UpdateHeadSize();</span><br><span class="line">            UpdateScrollRectSize();</span><br><span class="line">            m_scrollRect.RefillCells();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">int</span> <span class="title">GetWidthByColumnIndex</span>(<span class="params"><span class="built_in">int</span> columnIndex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (columnIndex &lt; <span class="number">0</span> || columnIndex &gt;= m_columnWidths.Count)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">return</span> m_columnWidths[columnIndex];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">CanSortByColumnIndex</span>(<span class="params"><span class="built_in">int</span> columnIndex</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_columnDefs == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (columnIndex &lt; <span class="number">0</span> || columnIndex &gt;= m_columnDefs.Count)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (m_columnDefs[columnIndex] == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> !m_columnDefs[columnIndex].disableSort;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            m_scrollRect = GetComponentInChildren&lt;LoopVerticalScrollRect&gt;();</span><br><span class="line">            m_head = GetComponentInChildren&lt;WHead&gt;();</span><br><span class="line">            Assert.IsNotNull(m_scrollRect);</span><br><span class="line">            Assert.IsNotNull(m_head);</span><br><span class="line">            m_scrollRectTransform = m_scrollRect.GetComponent&lt;RectTransform&gt;();</span><br><span class="line">            m_scrollbarRectTransform = m_scrollRect.verticalScrollbar.GetComponent&lt;RectTransform&gt;();</span><br><span class="line">            Assert.IsNotNull(m_scrollRectTransform);</span><br><span class="line">            Assert.IsNotNull(m_scrollbarRectTransform);</span><br><span class="line">            m_init = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateColumnWidths</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (m_columnDefs == <span class="literal">null</span>)</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">            m_columnWidths.Clear();</span><br><span class="line">            <span class="keyword">if</span> (m_columnDefs == <span class="literal">null</span> || m_columnDefs.Count == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m_columnDefs.Count; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    m_columnWidths.Add(tableWidth / m_columnDefs.Count);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">int</span> totalWidth = <span class="number">0</span>;</span><br><span class="line">                <span class="built_in">int</span> totalCount = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m_columnDefs.Count; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">int</span> width = <span class="number">0</span>;</span><br><span class="line">                    <span class="keyword">if</span> (m_columnDefs[i] != <span class="literal">null</span> &amp;&amp; !<span class="built_in">string</span>.IsNullOrEmpty(m_columnDefs[i].width))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (m_columnDefs[i].width.Contains(<span class="string">&#x27;%&#x27;</span>))</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">string</span> percentString = m_columnDefs[i].width.Replace(<span class="string">&quot;%&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                            <span class="built_in">int</span> percent;</span><br><span class="line">                            <span class="built_in">int</span>.TryParse(percentString, <span class="keyword">out</span> percent);</span><br><span class="line">                            width = (<span class="built_in">int</span>) (tableWidth * (percent / <span class="number">100.0f</span>));</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="built_in">int</span>.TryParse(m_columnDefs[i].width, <span class="keyword">out</span> width);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    m_columnWidths.Add(width);</span><br><span class="line">                    <span class="keyword">if</span> (width &gt; <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        totalCount += <span class="number">1</span>;</span><br><span class="line">                        totalWidth += width;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (totalCount &lt; m_columnDefs.Count)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">int</span> otherWidth = (tableWidth - totalWidth) / (m_columnDefs.Count - totalCount);</span><br><span class="line">                    <span class="keyword">if</span> (otherWidth &lt;= <span class="number">0</span>)</span><br><span class="line">                        Debug.LogError(<span class="string">&quot;Error columnDef for calculate column width&quot;</span>);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; m_columnWidths.Count; i++)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> (m_columnWidths[i] == <span class="number">0</span>)</span><br><span class="line">                            m_columnWidths[i] = otherWidth;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateScrollRectSize</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            m_scrollRectTransform.sizeDelta = <span class="keyword">new</span> Vector2(tableWidth, tableHeight);</span><br><span class="line">            m_scrollbarRectTransform.anchoredPosition = <span class="keyword">new</span> Vector2(tableWidth, <span class="number">0</span>);</span><br><span class="line">            m_scrollbarRectTransform.sizeDelta = <span class="keyword">new</span> Vector2(<span class="number">20</span>, tableHeight);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateByRowInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            m_scrollRect.objectsToFill = m_rowInfos.ToArray();</span><br><span class="line">            m_scrollRect.totalCount = m_rowInfos.Count;</span><br><span class="line">            m_scrollRect.RefillCells();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">CheckConfig</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(rowPrefab))</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">&quot;need set rowPrefab name&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (itemHeight &lt;= <span class="number">0</span> || tableWidth &lt;= <span class="number">0</span> || tableHeight &lt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">&quot;size number greater than zero&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (itemHeight &gt; tableHeight)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">&quot;need itemHeight &lt; tableHeight&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">CheckInputData</span>(<span class="params">IList&lt;IList&lt;<span class="built_in">object</span>&gt;&gt; datas, ICollection&lt;WColumnDef&gt; columnDefs</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (datas == <span class="literal">null</span> || columnDefs == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">&quot;datas columnDefs not be null&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (datas.Count == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.LogError(<span class="string">&quot;empty data&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; datas.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (datas[i].Count != columnDefs.Count)</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.LogError(<span class="string">&quot;row data length not equal columns length:&quot;</span> + i);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> column <span class="keyword">in</span> columnDefs)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(column.name))</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.LogError(<span class="string">&quot;columnDefs need contain column name&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(defaultHeadPrefabName) &amp;&amp; <span class="built_in">string</span>.IsNullOrEmpty(column.headPrefabName))</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.LogError(<span class="string">&quot;if defaultHeadPrefabName is empty, columnDefs need contain headPrefabName&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(defaultElementPrefabName) &amp;&amp; <span class="built_in">string</span>.IsNullOrEmpty(column.elementPrefabName))</span><br><span class="line">                &#123;</span><br><span class="line">                    Debug.LogError(<span class="string">&quot;if defaultElementPrefabName is empty, columnDefs need contain elementPrefabName&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; columnDefs.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; datas.Count - <span class="number">1</span>; j++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ((datas[j][i] == <span class="literal">null</span>) || (datas[j + <span class="number">1</span>][i] == <span class="literal">null</span>))</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> ((datas[j][i] == <span class="literal">null</span>) &amp;&amp; (datas[j + <span class="number">1</span>][i] == <span class="literal">null</span>))</span><br><span class="line">                            <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                        Debug.LogError(<span class="string">&quot;data type not same:[&quot;</span> + j + <span class="string">&quot;,&quot;</span> + i + <span class="string">&quot;], [&quot;</span> + (j + <span class="number">1</span>) + <span class="string">&quot;,&quot;</span> + i + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (datas[j][i].GetType() == datas[j + <span class="number">1</span>][i].GetType())</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">                    Debug.LogError(<span class="string">&quot;data type not same:[&quot;</span> + j + <span class="string">&quot;,&quot;</span> + i + <span class="string">&quot;], [&quot;</span> + (j + <span class="number">1</span>) + <span class="string">&quot;,&quot;</span> + i + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5、添加界面"><a href="#5、添加界面" class="headerlink" title="5、添加界面"></a>5、添加界面</h3><h4 id="Ⅰ、界面绘制及功能介绍-3"><a href="#Ⅰ、界面绘制及功能介绍-3" class="headerlink" title="Ⅰ、界面绘制及功能介绍"></a>Ⅰ、界面绘制及功能介绍</h4><p><img src="https://s2.loli.net/2022/07/26/A3fboNILyPs25lS.png" alt="image-20220628015334405"></p><p>该界面由 <strong>11个输入框组件</strong> 和 <strong>2个按钮组件</strong> 构成</p><p>用户通过在本界面输入相应的书籍或者作者信息，可以实现在数据库中添加记录的功能</p><p><strong>【例】</strong></p><p><img src="https://s2.loli.net/2022/07/26/3R4NMxCesDkpvIP.png" alt="image-20220628015724530"></p><p>注：书籍信息为个人编纂，仅测试用</p><p>若输入已有书籍，则会产生报错</p><p><img src="https://s2.loli.net/2022/07/26/vAiekpjGJZ35WlX.png" alt="image-20220628015833643"></p><h4 id="Ⅱ、功能实现-3"><a href="#Ⅱ、功能实现-3" class="headerlink" title="Ⅱ、功能实现"></a>Ⅱ、功能实现</h4><h5 id="（1）引入命名空间-3"><a href="#（1）引入命名空间-3" class="headerlink" title="（1）引入命名空间"></a>（1）引入命名空间</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br></pre></td></tr></table></figure><h5 id="（2）对变量及组件进行初始化赋值"><a href="#（2）对变量及组件进行初始化赋值" class="headerlink" title="（2）对变量及组件进行初始化赋值"></a>（2）对变量及组件进行初始化赋值</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> InputField nameinput;</span><br><span class="line"><span class="keyword">public</span> InputField autherinput;</span><br><span class="line"><span class="keyword">public</span> InputField producerinput;</span><br><span class="line"><span class="keyword">public</span> InputField ageinput;</span><br><span class="line"><span class="keyword">public</span> InputField tanslaterinput;</span><br><span class="line"><span class="keyword">public</span> InputField starinput;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> InputField authernameinput;</span><br><span class="line"><span class="keyword">public</span> InputField authersexinput;</span><br><span class="line"><span class="keyword">public</span> InputField birthinput;</span><br><span class="line"><span class="keyword">public</span> InputField areainput;</span><br><span class="line"><span class="keyword">public</span> InputField countryinput;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Button addbtn;</span><br><span class="line"><span class="keyword">public</span> Button addbtn1;</span><br><span class="line"><span class="keyword">public</span> GameObject shibai;</span><br><span class="line"><span class="keyword">public</span> GameObject chenggong;</span><br><span class="line">DataSet ds;</span><br></pre></td></tr></table></figure><h5 id="（3）对按钮事件进行绑定"><a href="#（3）对按钮事件进行绑定" class="headerlink" title="（3）对按钮事件进行绑定"></a>（3）对按钮事件进行绑定</h5><pre><code>private void Start()&#123;    shibai.SetActive(false);    chenggong.SetActive(false);    addbtn.onClick.AddListener(Add);    addbtn1.onClick.AddListener(Add1);&#125;</code></pre><h5 id="（4）实现添加书籍信息的功能"><a href="#（4）实现添加书籍信息的功能" class="headerlink" title="（4）实现添加书籍信息的功能"></a>（4）实现添加书籍信息的功能</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">    <span class="built_in">string</span> tablename = <span class="string">&quot;books&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> bookname = nameinput.text;</span><br><span class="line">    <span class="built_in">string</span> auther = autherinput.text;</span><br><span class="line">    <span class="built_in">string</span> producer = producerinput.text;</span><br><span class="line">    <span class="built_in">string</span> age = ageinput.text;</span><br><span class="line">    <span class="built_in">string</span> translate = tanslaterinput.text;</span><br><span class="line">    <span class="built_in">string</span> star = starinput.text;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span>[] datavalues = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123;bookname,auther,producer,age,translate,star,<span class="string">&quot;未借出&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>( bookname != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ds = sql.Additem(tablename, datavalues);</span><br><span class="line">        chenggong.SetActive(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">         </span><br><span class="line">    <span class="keyword">if</span> (ds == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        shibai.SetActive(<span class="literal">true</span>);</span><br><span class="line">    &#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（5）实现添加作者信息的功能"><a href="#（5）实现添加作者信息的功能" class="headerlink" title="（5）实现添加作者信息的功能"></a>（5）实现添加作者信息的功能</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">    <span class="built_in">string</span> tablename = <span class="string">&quot;auther&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> authername = authernameinput.text;</span><br><span class="line">    <span class="built_in">string</span> authersex = authersexinput.text;</span><br><span class="line">    <span class="built_in">string</span> birth = birthinput.text;</span><br><span class="line">    <span class="built_in">string</span> area = areainput.text;</span><br><span class="line">    <span class="built_in">string</span> country = countryinput.text;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">string</span>[] datavalues = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; authername, authersex, birth, area, country &#125;;</span><br><span class="line">    <span class="keyword">if</span> (authername != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ds = sql.Additem(tablename, datavalues);</span><br><span class="line">        chenggong.SetActive(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ds == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        shibai.SetActive(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6、修改界面"><a href="#6、修改界面" class="headerlink" title="6、修改界面"></a>6、修改界面</h3><h4 id="Ⅰ、界面绘制及功能介绍-4"><a href="#Ⅰ、界面绘制及功能介绍-4" class="headerlink" title="Ⅰ、界面绘制及功能介绍"></a>Ⅰ、界面绘制及功能介绍</h4><p><img src="https://s2.loli.net/2022/07/26/zwWLVxNUorJm7Al.png" alt="image-20220628020246461"></p><p>用户通过输入书籍名称对要修改的书籍进行查找</p><p><img src="https://s2.loli.net/2022/07/26/njx3WSUELH7Vy8M.png" alt="image-20220628020338245"></p><p><img src="https://s2.loli.net/2022/07/26/IyBV9qJm7c68iRn.png" alt="image-20220628020355296"></p><p>查找完成后可以对书籍信息进行修改，修改完成后点击 <strong>修改</strong> 按钮</p><p><img src="https://s2.loli.net/2022/07/26/JbTUvKhPm1VwduO.png" alt="image-20220628020450178"></p><p>再点击确认，即可修改成功</p><p><img src="https://s2.loli.net/2022/07/26/gZfeSkWuIo1YdTO.png" alt="image-20220628020540363"></p><h4 id="Ⅱ、功能实现-4"><a href="#Ⅱ、功能实现-4" class="headerlink" title="Ⅱ、功能实现"></a>Ⅱ、功能实现</h4><p>创建 AlterCanvas.cs 脚本</p><h5 id="（1）引入命名空间-4"><a href="#（1）引入命名空间-4" class="headerlink" title="（1）引入命名空间"></a>（1）引入命名空间</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Timers;</span><br></pre></td></tr></table></figure><h5 id="（2）变量及组件的初始化"><a href="#（2）变量及组件的初始化" class="headerlink" title="（2）变量及组件的初始化"></a>（2）变量及组件的初始化</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GameObject confcanvas;</span><br><span class="line"><span class="keyword">public</span> GameObject confcanvas1;</span><br><span class="line"><span class="keyword">public</span> InputField input_bookname;</span><br><span class="line"><span class="keyword">public</span> Text showtext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> InputField nameinput;</span><br><span class="line"><span class="keyword">public</span> InputField autherinput;</span><br><span class="line"><span class="keyword">public</span> InputField producerinput;</span><br><span class="line"><span class="keyword">public</span> InputField ageinput;</span><br><span class="line"><span class="keyword">public</span> InputField tanslaterinput;</span><br><span class="line"><span class="keyword">public</span> InputField starinput;</span><br><span class="line"><span class="keyword">public</span> InputField borrowinput;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Button querybtn;</span><br><span class="line"><span class="keyword">public</span> Button alterbtn;</span><br><span class="line"><span class="keyword">public</span> Button shanchubtn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Button quxiao_btn;</span><br><span class="line"><span class="keyword">public</span> Button queren_btn;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Button quxiao_btn1;</span><br><span class="line"><span class="keyword">public</span> Button queren_btn1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Color colorOrgion = <span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);<span class="comment">//默认为黑色</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> Alpha = <span class="number">1.0f</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">bool</span> isbeclikck = <span class="literal">false</span>;</span><br><span class="line">Timer timer = <span class="keyword">new</span> Timer(<span class="number">2000</span>);<span class="comment">//延迟2秒</span></span><br></pre></td></tr></table></figure><h5 id="（3）组件绑定及变量初始化"><a href="#（3）组件绑定及变量初始化" class="headerlink" title="（3）组件绑定及变量初始化"></a>（3）组件绑定及变量初始化</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;    </span><br><span class="line">    querybtn.onClick.AddListener(chaxun);</span><br><span class="line"></span><br><span class="line">    alterbtn.onClick.AddListener(xianshi);</span><br><span class="line">    quxiao_btn.onClick.AddListener(quxiao);</span><br><span class="line">    queren_btn.onClick.AddListener(queren);</span><br><span class="line"></span><br><span class="line">    shanchubtn.onClick.AddListener(xianshi1);</span><br><span class="line">    quxiao_btn1.onClick.AddListener(quxiao1);</span><br><span class="line">    queren_btn1.onClick.AddListener(queren1);</span><br><span class="line"></span><br><span class="line">    showtext.color = <span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//默认不显示</span></span><br><span class="line"></span><br><span class="line">    timer.Elapsed += (<span class="built_in">object</span> sender, ElapsedEventArgs e) =&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        isbeclikck = <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    timer.AutoReset = <span class="literal">false</span>; <span class="comment">//如果 System.Timers.Timer 应在每次间隔结束时引发 System.Timers.Timer.Elapsed 事件，则为 true；如果它仅在间隔第一次结束后引发一次，可以新建一颗控制台应用，然后F12跟进去查看详情，这是我复制粘贴的，</span></span><br><span class="line">    timer.Enabled = <span class="literal">true</span>;<span class="comment">// 如果 System.Timers.Timer 应引发 System.Timers.Timer.Elapsed 事件，则为 true；</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="（4）依次实现各个按钮的功能"><a href="#（4）依次实现各个按钮的功能" class="headerlink" title="（4）依次实现各个按钮的功能"></a>（4）依次实现各个按钮的功能</h5><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (isbeclikck)</span><br><span class="line">    &#123;</span><br><span class="line">        Alpha = Alpha - (Time.deltaTime);<span class="comment">//通过修改阿尔法值来设置显示或隐藏</span></span><br><span class="line">        colorOrgion.a = Alpha;</span><br><span class="line">        showtext.color = colorOrgion;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (colorOrgion.a &lt;= <span class="number">0</span>)<span class="comment">//如果阿尔法小于0就代表文字完全消失了</span></span><br><span class="line">    &#123;</span><br><span class="line">        isbeclikck = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chaxun</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">    <span class="built_in">string</span>[] inputitem = <span class="keyword">new</span> <span class="built_in">string</span>[<span class="number">7</span>];</span><br><span class="line">    <span class="built_in">string</span>[] items = &#123; <span class="string">&quot;*&quot;</span> &#125;;</span><br><span class="line">    <span class="built_in">string</span> tablename = <span class="string">&quot;books&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> bookname = input_bookname.text;</span><br><span class="line">    DataSet ds = sql.SelectWhere(tablename, items, bookname);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ds != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        DataTable table = ds.Tables[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (DataRow row <span class="keyword">in</span> table.Rows)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (DataColumn column <span class="keyword">in</span> table.Columns)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(row[column] + <span class="string">&quot;aa&quot;</span>);</span><br><span class="line">                str += row[column] + <span class="string">&quot; &quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            Debug.Log(str);</span><br><span class="line">            <span class="built_in">string</span>[] strSplit = str.Split();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> strSplit)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(item + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            nameinput.text = strSplit[<span class="number">0</span>];</span><br><span class="line">            autherinput.text = strSplit[<span class="number">1</span>];</span><br><span class="line">            producerinput.text = strSplit[<span class="number">2</span>];</span><br><span class="line">            ageinput.text = strSplit[<span class="number">3</span>];</span><br><span class="line">            tanslaterinput.text = strSplit[<span class="number">4</span>];</span><br><span class="line">            starinput.text = strSplit[<span class="number">5</span>];</span><br><span class="line">            borrowinput.text = strSplit[<span class="number">6</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queren</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (input_bookname.text != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> tablename = <span class="string">&quot;books&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> deletename = input_bookname.text;</span><br><span class="line">        DataSet ds1 = sql.Delete(tablename, deletename);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> bookname = nameinput.text;</span><br><span class="line">        <span class="built_in">string</span> auther = autherinput.text;</span><br><span class="line">        <span class="built_in">string</span> producer = producerinput.text;</span><br><span class="line">        <span class="built_in">string</span> age = ageinput.text;</span><br><span class="line">        <span class="built_in">string</span> translate = tanslaterinput.text;</span><br><span class="line">        <span class="built_in">string</span> star = starinput.text;</span><br><span class="line">        <span class="built_in">string</span> borrowed = borrowinput.text;</span><br><span class="line">        <span class="built_in">string</span>[] datavalues = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; bookname, auther, producer, age, translate, star, borrowed &#125;;</span><br><span class="line">        DataSet ds2 = sql.Additem(tablename, datavalues);</span><br><span class="line"></span><br><span class="line">        confcanvas.SetActive(<span class="literal">false</span>);</span><br><span class="line">        showtext.color = <span class="keyword">new</span> Color(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);<span class="comment">//只要点击按钮就会把文字的阿尔法值设置为1</span></span><br><span class="line">        Alpha = <span class="number">1</span>;</span><br><span class="line">        colorOrgion.a = <span class="number">1.0f</span>;</span><br><span class="line">        timer.Start(); <span class="comment">//开始计时，2秒之后执行Timer_Elapsed方法；</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">queren1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (input_bookname.text != <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> tablename = <span class="string">&quot;books&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> deletename = input_bookname.text;</span><br><span class="line">        DataSet ds1 = sql.Delete(tablename, deletename);</span><br><span class="line"></span><br><span class="line">        confcanvas1.SetActive(<span class="literal">false</span>);</span><br><span class="line">        Alpha = <span class="number">1</span>;</span><br><span class="line">        colorOrgion.a = <span class="number">1.0f</span>;</span><br><span class="line">        timer.Start(); <span class="comment">//开始计时，2秒之后执行Timer_Elapsed方法；</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">xianshi</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    confcanvas.SetActive(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quxiao</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    confcanvas.SetActive(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">xianshi1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    confcanvas1.SetActive(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quxiao1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    confcanvas1.SetActive(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Timer_Elapsed</span>(<span class="params"><span class="built_in">object</span> sender, ElapsedEventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    isbeclikck = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7、图表界面"><a href="#7、图表界面" class="headerlink" title="7、图表界面"></a>7、图表界面</h3><h4 id="Ⅰ、界面绘制及功能介绍-5"><a href="#Ⅰ、界面绘制及功能介绍-5" class="headerlink" title="Ⅰ、界面绘制及功能介绍"></a>Ⅰ、界面绘制及功能介绍</h4><p><img src="https://s2.loli.net/2022/07/26/WRg3ZJlUpyqYmKr.png" alt="image-20220628021037129"></p><p>该界面有一个饼状图和一个柱状图</p><p>上图为初始化状态</p><p>程序运行后</p><p><img src="https://s2.loli.net/2022/07/26/LfVbdzgcnQihvAt.png" alt="image-20220628021210340"></p><p>这两个图表会显示全部书籍的豆瓣评分分布状态</p><p>将鼠标移到饼状图的各个分布上，还会实现突出显示功能</p><p>点击饼状图的副标题，可选择是否隐藏该分部</p><p><img src="https://s2.loli.net/2022/07/26/fH4PnC9MN2XVTFc.png" alt="image-20220628021413705"></p><p>【注】底部柱状图x轴的乱码属于编译编码问题，在程序打包后即可解决</p><h4 id="Ⅱ、功能实现-5"><a href="#Ⅱ、功能实现-5" class="headerlink" title="Ⅱ、功能实现"></a>Ⅱ、功能实现</h4><p>图表绘制调用了Unity内置的动画状态机实现</p><p>图表数据的更新赋值调用如下函数实现，该函数在 MainCanva.cs 中被调用。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">xiugai</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> b = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">int</span> c = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    selcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    addcanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    altercanva.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    showchartcanva.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    SqlAccess sql = <span class="keyword">new</span> SqlAccess();</span><br><span class="line">    <span class="built_in">string</span>[] items = &#123; <span class="string">&quot;star&quot;</span> &#125;;</span><br><span class="line">    <span class="built_in">string</span> tablename = <span class="string">&quot;books&quot;</span>;</span><br><span class="line">    <span class="built_in">string</span> bookname = <span class="literal">null</span>;</span><br><span class="line">    DataSet ds = sql.SelectWhere(tablename, items, bookname);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (ds != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        DataTable table = ds.Tables[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (DataRow row <span class="keyword">in</span> table.Rows)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">string</span> str = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (DataColumn column <span class="keyword">in</span> table.Columns)</span><br><span class="line">            &#123;</span><br><span class="line">                str += row[column];</span><br><span class="line">                <span class="built_in">float</span> num = <span class="built_in">float</span>.Parse(str);</span><br><span class="line">                <span class="keyword">if</span> (num &gt;= <span class="number">9.0f</span>)</span><br><span class="line">                    a++;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (num &lt;= <span class="number">8.0f</span>)</span><br><span class="line">                    c++;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    b++;</span><br><span class="line">                <span class="comment">//stars.Add(float.Parse(str));</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    chart.UpdateData(<span class="number">0</span>, <span class="number">0</span>, a);</span><br><span class="line">    chart.UpdateData(<span class="number">0</span>, <span class="number">1</span>, b);</span><br><span class="line">    chart.UpdateData(<span class="number">0</span>, <span class="number">2</span>, c);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> yAxis = barchart.GetChartComponent&lt;YAxis&gt;();</span><br><span class="line">    yAxis.minMaxType = Axis.AxisMinMaxType.Default;</span><br><span class="line"></span><br><span class="line">    barchart.RemoveData();</span><br><span class="line">    serie = barchart.AddSerie&lt;Bar&gt;(<span class="string">&quot;Star&quot;</span>);</span><br><span class="line"></span><br><span class="line">    barchart.AddXAxisData(<span class="string">&quot;小于8.0&quot;</span>);</span><br><span class="line">    barchart.AddData(<span class="number">0</span>, c);</span><br><span class="line">    barchart.AddXAxisData(<span class="string">&quot;8.0-9.0&quot;</span>);</span><br><span class="line">    barchart.AddData(<span class="number">0</span>, b);</span><br><span class="line">    barchart.AddXAxisData(<span class="string">&quot;大于9.0&quot;</span> );</span><br><span class="line">    barchart.AddData(<span class="number">0</span>, a);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="五、实验总结及心得"><a href="#五、实验总结及心得" class="headerlink" title="五、实验总结及心得"></a><strong>五、实验总结及心得</strong></h2><p>（略）</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;(前排提示:为了凑字数导致内容较水)&lt;/p&gt;
&lt;h4 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h4&gt;&lt;p&gt;本实验采用的数据库为MySQL数据库，其具有体积小、速度快等优点。本实验的GUI部分采用Unity3D引擎制作，通过编写C#脚本挂载到Unity引擎中，实现了Unity与MySQL之间的连接。在完成基础实验一至五的前提上，依照要求实现了一个小型书籍信息管理系统 ，具有增删改查等基本功能，同时还可以根据一定要求进行排序，并且创建了两个图表对数据信息进行汇总，便于后续分析。&lt;/p&gt;
&lt;h4 id=&quot;关键词&quot;&gt;&lt;a href=&quot;#关键词&quot; class=&quot;headerlink&quot; title=&quot;关键词&quot;&gt;&lt;/a&gt;关键词&lt;/h4&gt;&lt;p&gt;MySQL、Unity、、C#、书籍信息管理&lt;/p&gt;</summary>
    
    
    
    <category term="Unity" scheme="http://example.com/categories/Unity/"/>
    
    
    <category term="Unity" scheme="http://example.com/tags/Unity/"/>
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>传送门特效及实现</title>
    <link href="http://example.com/2022/07/27/%E5%A5%87%E5%BC%82%E5%8D%9A%E5%A3%AB%E4%BC%A0%E9%80%81%E9%97%A8/"/>
    <id>http://example.com/2022/07/27/%E5%A5%87%E5%BC%82%E5%8D%9A%E5%A3%AB%E4%BC%A0%E9%80%81%E9%97%A8/</id>
    <published>2022-07-27T09:47:18.094Z</published>
    <updated>2022-07-26T03:54:50.293Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、传送门特效"><a href="#一、传送门特效" class="headerlink" title="一、传送门特效"></a>一、传送门特效</h4><h5 id="1、使用组件"><a href="#1、使用组件" class="headerlink" title="1、使用组件"></a>1、使用组件</h5><p>采用Unity内置渲染管线中的Particle System制作</p><h5 id="2、实现思路"><a href="#2、实现思路" class="headerlink" title="2、实现思路"></a>2、实现思路</h5><p>（1）首先创建四个圆球用于特效的定位，并且采用动画效果使其分散并旋转。</p><span id="more"></span><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/0c8e40d99e10be4b.png"></p><p>（2）新建一个Particle System，将其作为上述小球的子物体，将shape改为box，并修改颜色，添加自定义材质。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/2b276d77ae52b808.png"></p><p>（3）再新建一个Particle System，将其作为上述小球的子物体，修改同上，并且设置Start Delay、Start Speed等，增加粒子量与Emission，使其呈现出喷散效果。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/6d6a8b76460555c7.png"></p><p>（4）将 (2) (3) 组合，并复制一份到另一个小球上。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/3428e2c420bd454b.png"></p><p>（5）再次新建Particle System，将shape改为Circle，适当减少粒子量</p><p>，同时调整Start Delay、Start Lifetime、Start Speed与Velocity over LifeTime，添加碰撞效果，增加半径，并改为从边缘发射，得到如下效果。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/3aabfd25bb4ec3dd.png"></p><p>（6）添加底部倒影。将Emission的粒子量减小到5，Start Speed设为0，进行旋转缩放，使其贴近地面</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/bdc12186e59e727c.png"></p><p>（7）制作两侧溅射效果。将（5）处效果复制一份，对圆进行扇形裁减，扩大其 Velocity of LifeTime，使其溅射距离加大，同时添加与地面的碰撞效果。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/e3e461e0841c9e32.png"></p><p>（8）将（7）处效果复制一份，旋转180置于另一侧，将上述效果组合起来，开启后处理（Bloom效果）。同时将一开始创建的四个小球利用起来，为其添加HDR颜色，伪装成高光闪烁部分。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/19/b87263501c6b29a9.png"></p><h5 id="3、分析"><a href="#3、分析" class="headerlink" title="3、分析"></a>3、分析</h5><p>共计使用了8个Particle System，总粒子数在10000左右。材质贴图为自定义制作。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/20/f773ed0159d8543d.png" alt="image-20220419173927582"></p><p>可以通过不同的材质贴图对粒子数进行修改，若将图中白色部分拉长，可适当减少粒子数量。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/20/b64566f4efc838a2.png" alt="image-20220419174033159"></p><p>经过测试，粒子将会显得十分细长，且颜色不好控制，即使将bloom效果开的很低，也难以分辨。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/20/ea4777b3378991e9.png"></p><h4 id="二、具体传送效果"><a href="#二、具体传送效果" class="headerlink" title="二、具体传送效果"></a>二、具体传送效果</h4><h5 id="1、组件使用情况"><a href="#1、组件使用情况" class="headerlink" title="1、组件使用情况"></a>1、组件使用情况</h5><p>玩家：一个人物和摄像机移动的控制脚本</p><p>传送门：一个总控制脚本，两个传送脚本</p><p>Shader：使用屏幕空间的坐标，材质附加在传送门上</p><p>传送门：一个Cylinder模型，将其压缩，模拟一个圆形面。</p><h5 id="2、实现思路-1"><a href="#2、实现思路-1" class="headerlink" title="2、实现思路"></a>2、实现思路</h5><p>场景中共有三个摄像头(两个传送门)。一个玩家主摄像头，两个传送门摄像头PortalCamA 和 PortalCamB，首先新建两个Render Texture 作为两个传送门所用的摄像头的Target Texture，将PortalCamA 渲染出的Render Texture添加到传送门B上，作为主纹理。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/20/8cdbac208214e128.png" alt="image-20220419175956871"></p><p>配合上述Shader中的裁剪效果</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vert</span></span><br><span class="line">o.vertex = UnityObjectToClipPos(v.vertex);</span><br><span class="line">o.screenPos = ComputeScreenPos(o.vertex);</span><br><span class="line">..........................</span><br><span class="line"><span class="comment">//frag    </span></span><br><span class="line">float2 uv = i.screenPos.xy / i.screenPos.w;</span><br><span class="line">fixed4 portalCol = tex2D(_MainTex, uv);</span><br></pre></td></tr></table></figure><p>传送门B中显示的便是PortalCamA摄像机所观察到的画面。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/20/051b58db13d21f8d.png" alt="image-20220419175906347"></p><p>对另一个传送门采用同样的设置。</p><p>根据向量加减的原理，可以同玩家相对于传送门A的位置 和 传送门B的位置求出PortalCamB的位置，此时PortalCamB的观察图像就相当于玩家在另一个场景的观察图像。</p><p><img src="https://s3.bmp.ovh/imgs/2022/04/20/0f074cea5e3f6b33.png"></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Yangle = player.transform.eulerAngles.y;</span><br><span class="line">Xangle = playerCam.transform.eulerAngles.x;</span><br><span class="line"></span><br><span class="line">portalCamB.transform.position = DoorB.position + player.position - DoorA.position;</span><br><span class="line">portalCamB.transform.localRotation = Quaternion.Euler(Xangle,Yangle,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">portalCamA.transform.position = DoorA.position + player.position - DoorB.position;</span><br><span class="line">portalCamA.transform.localRotation = Quaternion.Euler(Xangle,Yangle,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>为传送门添加一个碰撞体，当玩家进入到传送门A时，触发传送效果，将此时 PortalCamB 的位置和旋转角度赋值给玩家及摄像头，即可实现玩家位置的传送效果。</p><p>此处添加了一个判断，用于对摄像机进行渲染层级的裁剪，避免视角重叠情况。</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// camera.cullingMask &amp;= ~(1 &lt;&lt; x); // 关闭层x</span></span><br><span class="line">playerCam.cullingMask &amp;= ~(<span class="number">1</span> &lt;&lt; PortalLayer);</span><br><span class="line">...............................</span><br><span class="line">...............................</span><br><span class="line">MyPortal01.transflag = MyPortal01.transflag + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(MyPortal01.transflag == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">   <span class="comment">// camera.cullingMask |= (1 &lt;&lt; x); // 打开层x</span></span><br><span class="line">   playerCam.cullingMask |= (<span class="number">1</span> &lt;&lt; PortalLayer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="踩坑点："><a href="#踩坑点：" class="headerlink" title="踩坑点："></a>踩坑点：</h6><p>1、玩家控制脚本使用了Character Controller组件导致 </p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">other.transform.position = transPos;</span><br></pre></td></tr></table></figure><p>赋值后不起作用，需要在cc. move() 前面添加如下代码</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Physics.autoSyncTransforms = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>2、在使用碰撞体触发传送时，进入第一个传送门触发一次OnTriggerEnter()，然后传送到第二个传送门，触发一次来自第一个传送门的OnTriggerExit() 和来自第二个传送门的OnTriggerEnter()。</p><hr>]]></content>
    
    
    <summary type="html">&lt;h4 id=&quot;一、传送门特效&quot;&gt;&lt;a href=&quot;#一、传送门特效&quot; class=&quot;headerlink&quot; title=&quot;一、传送门特效&quot;&gt;&lt;/a&gt;一、传送门特效&lt;/h4&gt;&lt;h5 id=&quot;1、使用组件&quot;&gt;&lt;a href=&quot;#1、使用组件&quot; class=&quot;headerlink&quot; title=&quot;1、使用组件&quot;&gt;&lt;/a&gt;1、使用组件&lt;/h5&gt;&lt;p&gt;采用Unity内置渲染管线中的Particle System制作&lt;/p&gt;
&lt;h5 id=&quot;2、实现思路&quot;&gt;&lt;a href=&quot;#2、实现思路&quot; class=&quot;headerlink&quot; title=&quot;2、实现思路&quot;&gt;&lt;/a&gt;2、实现思路&lt;/h5&gt;&lt;p&gt;（1）首先创建四个圆球用于特效的定位，并且采用动画效果使其分散并旋转。&lt;/p&gt;</summary>
    
    
    
    <category term="Unity" scheme="http://example.com/categories/Unity/"/>
    
    
    <category term="Unity" scheme="http://example.com/tags/Unity/"/>
    
  </entry>
  
  <entry>
    <title>《Deep Learning for Rendering》阅读笔记</title>
    <link href="http://example.com/2022/07/27/DL%20for%20Render%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/07/27/DL%20for%20Render%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</id>
    <published>2022-07-27T09:47:18.087Z</published>
    <updated>2022-07-26T04:11:49.393Z</updated>
    
    <content type="html"><![CDATA[<p>中科大第九届《计算机图形学前沿》暑期课程</p><p>主讲人：过洁</p><p>原视频地址：<a href="https://www.bilibili.com/video/BV1Kf4y157WW?p=17&amp;vd_source=e4b21da575ef85d87ce1b8e9f64ca190">https://www.bilibili.com/video/BV1Kf4y157WW?p=17&amp;vd_source=e4b21da575ef85d87ce1b8e9f64ca190</a></p><span id="more"></span><h3 id="一、渲染"><a href="#一、渲染" class="headerlink" title="一、渲染"></a>一、渲染</h3><p> 场景里的几何、材质、光照等通过一个渲染器，生成一张图片</p><h4 id="几何"><a href="#几何" class="headerlink" title="几何"></a>几何</h4><p>三角网格(传统)、体素、点云</p><img src="https://s2.loli.net/2022/07/26/siXuLP1tWjwrgET.png" alt="image-20220619150852443" style="zoom:67%;" /><p>三角网格在复杂场景中数据量巨大</p><h4 id="材质"><a href="#材质" class="headerlink" title="材质"></a>材质</h4><p>材质 ≠ 纹理</p><p>描述 光线打到物体上后经过反射、折射等各种交互，出来后的形态各种各样</p><h4 id="光源"><a href="#光源" class="headerlink" title="光源"></a>光源</h4><p>次生光线、递归迭代</p><p>渲染中的某些场景元素(信号)的特点</p><ul><li>高纬度（High dimensionality）</li><li>奇点 （Singularity）</li><li>多模态 （Multi-modality）–网格、体素、点云</li><li>数据量巨大 （Huge data size）</li></ul><p>导致的问题：渲染很困难</p><h3 id="二、深度学习中的渲染"><a href="#二、深度学习中的渲染" class="headerlink" title="二、深度学习中的渲染"></a>二、深度学习中的渲染</h3><h4 id="深度学习中的功能"><a href="#深度学习中的功能" class="headerlink" title="深度学习中的功能"></a>深度学习中的功能</h4><ul><li>处理高纬度和多模态的数据（高纬度可以压缩、多模态可以多模态融合）</li><li>神经网络比某些人手写的公式更好、更快、更鲁棒</li><li>可以在很复杂的问题中探索 low-rank 特征</li></ul><h4 id="深度学习在渲染中的两个角色"><a href="#深度学习在渲染中的两个角色" class="headerlink" title="深度学习在渲染中的两个角色"></a>深度学习在渲染中的两个角色</h4><p>1、深度学习可以学习某种表征来对复杂场景元素进行编码</p><ul><li>对几何材质光源进行抽象</li><li>可在 forward rendering 和 inverse rendering 中使用</li></ul><p>2、学习一个domain到其他domain 的映射函数</p><ul><li>图片到图片</li><li>传统方法是从手工推出的函数</li></ul><h4 id="第一个角色"><a href="#第一个角色" class="headerlink" title="第一个角色"></a>第一个角色</h4><p>学习一个 表示（representation）</p><p>可学习对象：几何、材质、光源、场景</p><h5 id="（1）几何"><a href="#（1）几何" class="headerlink" title="（1）几何"></a>（1）几何</h5><p>用神经网络表示各种各样的几何体</p><p>在场景中表示几何：</p><ul><li>多视角图片</li><li>Signed distance function （SDF）三维重建</li><li>稠密体素</li><li>稀疏体素</li><li>点云</li><li>网格</li><li>……</li></ul><img src="https://s2.loli.net/2022/07/26/ZPLiWTC6mK57Njk.png" alt="image-20220619153326564" style="zoom:80%;" /><img src="https://s2.loli.net/2022/07/26/nvHthz87Erx9fUD.png" alt="image-20220619153443878" style="zoom:80%;" /><p>用网络去处理 mesh 的很少</p><img src="https://s2.loli.net/2022/07/26/9iJXat7hTjRKyYU.png" alt="image-20220619153520455" style="zoom:80%;" /><h5 id="（2）材质"><a href="#（2）材质" class="headerlink" title="（2）材质"></a>（2）材质</h5><p>用神经网络去表示材质</p><p>材质可以抽象成一个函数，包含16个变量（入射、出射光方向、时间）</p><img src="https://s2.loli.net/2022/07/26/ec4HV9loQOugvbp.png" alt="image-20220619153743048" style="zoom: 80%;" /><ul><li>用经验模型简化材质</li><li>直接采集：<ul><li>密集采样，</li><li>移动相机光源采样、</li><li>将数据保存在一个table里面。</li><li>耗内存、速度慢</li></ul></li></ul><p>措施：压缩、降维</p><p>用深度学习去压缩材质</p><p>DeepBRDF ： </p><img src="https://s2.loli.net/2022/07/26/aAd5OT3LMYKQjeR.png" alt="image-20220619154412703" style="zoom: 80%;" /><p>latent space ：潜在空间、隐空间</p><p>参考： <a href="https://zhuanlan.zhihu.com/p/369946876">https://zhuanlan.zhihu.com/p/369946876</a></p><ul><li>潜在空间只是压缩数据的表示，其中相似的数据点在空间上更靠近在一起。</li><li>潜在空间对于学习数据功能和查找更简单的数据表示形式以进行分析很有用。</li><li>我们可以通过分析潜在空间中的数据（通过流形，聚类等）来了解数据点之间的模式或结构相似性。</li><li>我们可以在潜在空间内插值数据，并使用模型的解码器来“生成”数据样本。</li><li>我们可以使用t-SNE和LLE之类的算法来可视化潜在空间，该算法将我们的潜在空间表示形式转换为2D或3D。</li></ul><p>将 BRDF Slice作为输入</p><img src="https://s2.loli.net/2022/07/26/ujit8nwPaBczkpy.png" alt="image-20220619154908240" style="zoom:80%;" /><p>BRDF 不考虑材质的表面变化，若考虑表面变化还有一些光照效果等，我们采用 BTF</p><p>BTF： Bidirectional Texture Function</p><img src="https://s2.loli.net/2022/07/26/AsGQZ5ESu2Kw4Vx.png" alt="image-20220619155652279" style="zoom:80%;" /><p>对 SVBRDF 进行压缩</p><p><img src="https://s2.loli.net/2022/07/26/t5hyQjx6GVYLmBz.png" alt="image-20220619163330460"></p><img src="https://s2.loli.net/2022/07/26/Edkq21cTwmauA6U.png" alt="image-20220619163830172" style="zoom:80%;" /><p>用神经网络去压缩材质空间，这个工作远没有结束</p><p><strong>【三维体素型材质】</strong>：玉石、烟雾、半透明物体</p><img src="https://s2.loli.net/2022/07/26/Ww7fTkAgjhUPlDL.png" alt="image-20220619163930515" style="zoom:80%;" /><p>借鉴风格迁移</p><img src="https://s2.loli.net/2022/07/26/oVrcLBdASTzpWy9.png" alt="image-20220619164041610" style="zoom:80%;" /><p>只是风格相似，不一定是完全match</p><img src="https://s2.loli.net/2022/07/26/JQPgB89dzIsfnWR.png" alt="image-20220619164444074" style="zoom:80%;" /><p>对于任何一张图片，可以抽取其风格，然后迁移到三维物体上</p><h5 id="（3）用神经网络表示光源"><a href="#（3）用神经网络表示光源" class="headerlink" title="（3）用神经网络表示光源"></a>（3）用神经网络表示光源</h5><p><img src="https://s2.loli.net/2022/07/26/stSf6JbiqdkVARc.png" alt="image-20220619164521562"></p><p>环境光也是一种高维信号，同样的思想，采用神经网络去压缩，压缩形成的latent space并不是用于渲染，而是用于光照估计。</p><img src="https://s2.loli.net/2022/07/26/SNwBvZG1YWsFq48.png" alt="image-20220619164717253" style="zoom:80%;" /><p>先用神经网路抽取一个室外全景图的latent space，可以用于光照估计，输入一张图，去预测光照，先预测latent code，然后再用decode去恢复这张环境图。</p><p>应用：把虚拟物体插入到真实环境下</p><img src="https://s2.loli.net/2022/07/26/W3BxpHyi4NdASTm.png" alt="image-20220619164957649" style="zoom:80%;" /><p>这项工作在深度学习里有个非常重要的思想：disentanglement</p><p>刚才讲到是室外光，那么室内光是否也可以用auto-encode、GAN等进行压缩？</p><p>答案是不行，室内光过于复杂，难以压缩。</p><img src="https://s2.loli.net/2022/07/26/A9wceK8X34Ms7EJ.png" alt="image-20220619165815866" style="zoom:80%;" /><p>该项工作把光源压缩到一个神经网络上</p><h5 id="（4）场景"><a href="#（4）场景" class="headerlink" title="（4）场景"></a>（4）场景</h5><p>那么是否可以直接对整个场景，不分几何材质光照，进行压缩？</p><p> <strong>Neural scene</strong></p><p><img src="https://s2.loli.net/2022/07/26/pCl8LxNBkGfgwFj.png" alt="image-20220619170013686"></p><p>限制：容易丢失细节</p><h4 id="第二个角色：-Mapping-映射"><a href="#第二个角色：-Mapping-映射" class="headerlink" title="第二个角色： Mapping 映射"></a>第二个角色： Mapping 映射</h4><p>从一个 domain 到另一个 domain</p><img src="https://s2.loli.net/2022/07/26/bnFoW63Sc5E8TYm.png" alt="image-20220619170931536" style="zoom:80%;" /><ul><li>去噪</li><li>超分</li><li>直接光—间接光</li><li>渲染图片—材质贴图</li></ul><h5 id="（1）去噪"><a href="#（1）去噪" class="headerlink" title="（1）去噪"></a>（1）去噪</h5><p><img src="https://s2.loli.net/2022/07/26/SprU5tKHXZAwLDx.png" alt="image-20220619171826353"></p><ul><li>漫反射-镜面反射的分解</li><li>G-buffer</li><li>无限的训练样本（理论上）</li><li>解调 Demodulation （图象 &#x2F; albedo）</li></ul><p>在无监督去噪中，loss是关键</p><img src="https://s2.loli.net/2022/07/26/LxShwJz81ZV523B.png" alt="image-20220619172234941" style="zoom:80%;" /><h5 id="（2）超分"><a href="#（2）超分" class="headerlink" title="（2）超分"></a>（2）超分</h5><p>典例：DLSS、Neual SS</p><p><img src="https://s2.loli.net/2022/07/26/KzS6Nf3WbpeGrwk.png" alt="image-20220619172322173"></p><p><img src="https://s2.loli.net/2022/07/26/sBYl1rdX8ZzP59Q.png" alt="image-20220619172333668"></p><h5 id="（3）从直接光照预测间接光照"><a href="#（3）从直接光照预测间接光照" class="headerlink" title="（3）从直接光照预测间接光照"></a>（3）从直接光照预测间接光照</h5><img src="https://s2.loli.net/2022/07/26/CE6QdXzFxOZi2pr.png" alt="image-20220619172447406" style="zoom:80%;" /><p>该方向的研究较少</p><p>直接光照很快，间接光照很慢</p><h5 id="（4）从渲染图片出发，反推场景元素"><a href="#（4）从渲染图片出发，反推场景元素" class="headerlink" title="（4）从渲染图片出发，反推场景元素"></a>（4）从渲染图片出发，反推场景元素</h5><p><img src="https://s2.loli.net/2022/07/26/wedM7pWRiGBCVg8.png" alt="image-20220619172605439"></p><p>从单张图片恢复 各种光照贴图，对于光泽效果的呈现尤为重要</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;中科大第九届《计算机图形学前沿》暑期课程&lt;/p&gt;
&lt;p&gt;主讲人：过洁&lt;/p&gt;
&lt;p&gt;原视频地址：&lt;a href=&quot;https://www.bilibili.com/video/BV1Kf4y157WW?p=17&amp;amp;vd_source=e4b21da575ef85d87ce1b8e9f64ca190&quot;&gt;https://www.bilibili.com/video/BV1Kf4y157WW?p=17&amp;amp;vd_source=e4b21da575ef85d87ce1b8e9f64ca190&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CG" scheme="http://example.com/categories/CG/"/>
    
    
    <category term="CG" scheme="http://example.com/tags/CG/"/>
    
    <category term="笔记" scheme="http://example.com/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/07/27/hello-world/"/>
    <id>http://example.com/2022/07/27/hello-world/</id>
    <published>2022-07-27T09:40:11.532Z</published>
    <updated>2022-07-26T01:51:28.452Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><span id="more"></span><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
